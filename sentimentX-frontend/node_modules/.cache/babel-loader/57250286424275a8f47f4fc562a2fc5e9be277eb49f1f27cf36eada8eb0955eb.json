{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltcoinSeason = () => {\n  _s();\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [outperformingCount, setOutperformingCount] = useState(0);\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\n  const [isRequestBlocked, setIsRequestBlocked] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const delay = 5000; // Delay in milliseconds (5 seconds)\n\n  const fetchAltcoinSeasonData = async () => {\n    if (isRequestBlocked) {\n      setErrorMessage(\"Too many requests. You must wait a bit.\");\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\");\n      const data = await response.json();\n      const excludedCoins = [\"tether\", \"usd-coin\", \"wrapped-bitcoin\", \"staked-ether\", \"binance-usd\", \"dai\", \"trueusd\", \"wrapped-steth\", \"weth\", \"ethereum-classic\", \"coinbase-wrapped-btc\", \"wrapped-ethereum\", \"usds\", \"wrapped-eeth\", \"bitcoin-cash\", \"wrapped-ust\", \"susds\", \"ethena-usde\", \"first-digital-usd\", \"paypal-usd\", \"usual-usd\", \"binance-staked-sol\", \"solv-protocol-solvbtc-bbn\", \"lombard-staked-btc\", \"wrapped-avax\", \"solv-btc\", \"binance-peg-weth\", \"kelp-dao-restaked-eth\", \"mantle-staked-ether\", \"rocket-pool-eth\"];\n      const filteredData = data.filter(coin => !excludedCoins.includes(coin.id));\n      console.log(\"Filtered data:\", filteredData);\n      let outperformingCountTemp = 0;\n      const totalAltcoinsTemp = filteredData.length;\n      const outperformingCoinsTemp = [];\n      const bitcoin = data.find(coin => coin.id === \"bitcoin\");\n      if (!bitcoin) {\n        console.error(\"Bitcoin data not found\");\n        return;\n      }\n      for (let coin of filteredData) {\n        if (coin.price_change_percentage_24h > bitcoin.price_change_percentage_24h) {\n          outperformingCountTemp++;\n          outperformingCoinsTemp.push({\n            name: coin.name,\n            priceChange: coin.price_change_percentage_24h,\n            image: coin.image\n          });\n        }\n      }\n      setOutperformingCount(outperformingCountTemp);\n      setTotalAltcoins(totalAltcoinsTemp);\n      setOutperformingCoins(outperformingCoinsTemp);\n      setPercentage(outperformingCountTemp / totalAltcoinsTemp * 100);\n      setIsAltcoinSeason(outperformingCountTemp / totalAltcoinsTemp * 100 >= 75);\n    } catch (error) {\n      console.error(\"Error fetching altcoin season data:\", error);\n      setIsAltcoinSeason(false);\n    } finally {\n      setLoading(false);\n      setIsRequestBlocked(true);\n      setTimeout(() => {\n        setIsRequestBlocked(false);\n        setErrorMessage(\"\"); // Reset error message after delay\n      }, delay);\n    }\n  };\n  useEffect(() => {\n    fetchAltcoinSeasonData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-gray-700 text-lg\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 12\n  }, this);\n  const barColor = percentage >= 80 ? \"bg-green-600\" : percentage >= 60 ? \"bg-green-400\" : percentage >= 40 ? \"bg-yellow-400\" : percentage >= 20 ? \"bg-orange-400\" : \"bg-red-500\";\n  outperformingCoins.sort((a, b) => b.priceChange - a.priceChange);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\",\n      children: isAltcoinSeason ? \"It's Altcoin Season! ðŸš€\" : \"It's not Altcoin Season. ðŸ“‰\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full bg-gray-300 h-4 rounded-full mb-6 overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-4 rounded-full transition-all duration-500 ${barColor}`,\n        style: {\n          width: `${percentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-700 dark:text-gray-300 text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-gray-900 dark:text-white\",\n        children: outperformingCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), \" \", \"out of\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-gray-900 dark:text-white\",\n        children: [\" \", totalAltcoins, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), \"altcoins have outperformed Bitcoin in the last 24 hours.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), outperformingCoins.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 dark:text-white mb-4 text-center\",\n        children: \"Coins outperforming Bitcoin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n        children: outperformingCoins.map((coin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md hover:scale-105 transition-transform\",\n          onClick: fetchAltcoinSeasonData,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: coin.image,\n              alt: coin.name,\n              className: \"w-8 h-8 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-gray-900 dark:text-white\",\n              children: coin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `font-medium ${coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"}`,\n            children: [coin.priceChange > 0 ? \"+\" : \"\", coin.priceChange.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-red-500 mt-4\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"Q6ExFKbMs+VqLvM7npfC40HtZP0=\");\n_c = AltcoinSeason;\nexport default AltcoinSeason;\nvar _c;\n$RefreshReg$(_c, \"AltcoinSeason\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AltcoinSeason","_s","isAltcoinSeason","setIsAltcoinSeason","loading","setLoading","outperformingCount","setOutperformingCount","totalAltcoins","setTotalAltcoins","percentage","setPercentage","outperformingCoins","setOutperformingCoins","isRequestBlocked","setIsRequestBlocked","errorMessage","setErrorMessage","delay","fetchAltcoinSeasonData","response","fetch","data","json","excludedCoins","filteredData","filter","coin","includes","id","console","log","outperformingCountTemp","totalAltcoinsTemp","length","outperformingCoinsTemp","bitcoin","find","error","price_change_percentage_24h","push","name","priceChange","image","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","barColor","sort","a","b","style","width","map","index","onClick","src","alt","toFixed","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst AltcoinSeason = () => {\r\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [outperformingCount, setOutperformingCount] = useState(0);\r\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\r\n  const [isRequestBlocked, setIsRequestBlocked] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const delay = 5000; // Delay in milliseconds (5 seconds)\r\n\r\n  const fetchAltcoinSeasonData = async () => {\r\n    if (isRequestBlocked) {\r\n      setErrorMessage(\"Too many requests. You must wait a bit.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\"\r\n      );\r\n      const data = await response.json();\r\n\r\n      const excludedCoins = [\r\n        \"tether\",\r\n        \"usd-coin\",\r\n        \"wrapped-bitcoin\",\r\n        \"staked-ether\",\r\n        \"binance-usd\",\r\n        \"dai\",\r\n        \"trueusd\",\r\n        \"wrapped-steth\",\r\n        \"weth\",\r\n        \"ethereum-classic\",\r\n        \"coinbase-wrapped-btc\",\r\n        \"wrapped-ethereum\",\r\n        \"usds\",\r\n        \"wrapped-eeth\",\r\n        \"bitcoin-cash\",\r\n        \"wrapped-ust\",\r\n        \"susds\",\r\n        \"ethena-usde\",\r\n        \"first-digital-usd\",\r\n        \"paypal-usd\",\r\n        \"usual-usd\",\r\n        \"binance-staked-sol\",\r\n        \"solv-protocol-solvbtc-bbn\",\r\n        \"lombard-staked-btc\",\r\n        \"wrapped-avax\",\r\n        \"solv-btc\",\r\n        \"binance-peg-weth\",\r\n        \"kelp-dao-restaked-eth\",\r\n        \"mantle-staked-ether\",\r\n        \"rocket-pool-eth\",\r\n      ];\r\n\r\n      const filteredData = data.filter(\r\n        (coin) => !excludedCoins.includes(coin.id)\r\n      );\r\n      console.log(\"Filtered data:\", filteredData);\r\n      let outperformingCountTemp = 0;\r\n      const totalAltcoinsTemp = filteredData.length;\r\n      const outperformingCoinsTemp = [];\r\n\r\n      const bitcoin = data.find((coin) => coin.id === \"bitcoin\");\r\n      if (!bitcoin) {\r\n        console.error(\"Bitcoin data not found\");\r\n        return;\r\n      }\r\n\r\n      for (let coin of filteredData) {\r\n        if (\r\n          coin.price_change_percentage_24h > bitcoin.price_change_percentage_24h\r\n        ) {\r\n          outperformingCountTemp++;\r\n          outperformingCoinsTemp.push({\r\n            name: coin.name,\r\n            priceChange: coin.price_change_percentage_24h,\r\n            image: coin.image,\r\n          });\r\n        }\r\n      }\r\n\r\n      setOutperformingCount(outperformingCountTemp);\r\n      setTotalAltcoins(totalAltcoinsTemp);\r\n      setOutperformingCoins(outperformingCoinsTemp);\r\n      setPercentage((outperformingCountTemp / totalAltcoinsTemp) * 100);\r\n      setIsAltcoinSeason(\r\n        (outperformingCountTemp / totalAltcoinsTemp) * 100 >= 75\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error fetching altcoin season data:\", error);\r\n      setIsAltcoinSeason(false);\r\n    } finally {\r\n      setLoading(false);\r\n      setIsRequestBlocked(true);\r\n      setTimeout(() => {\r\n        setIsRequestBlocked(false);\r\n        setErrorMessage(\"\"); // Reset error message after delay\r\n      }, delay);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAltcoinSeasonData();\r\n  }, []);\r\n\r\n  if (loading)\r\n    return <div className=\"text-center text-gray-700 text-lg\">Loading...</div>;\r\n\r\n  const barColor =\r\n    percentage >= 80\r\n      ? \"bg-green-600\"\r\n      : percentage >= 60\r\n      ? \"bg-green-400\"\r\n      : percentage >= 40\r\n      ? \"bg-yellow-400\"\r\n      : percentage >= 20\r\n      ? \"bg-orange-400\"\r\n      : \"bg-red-500\";\r\n\r\n  outperformingCoins.sort((a, b) => b.priceChange - a.priceChange);\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\">\r\n        {isAltcoinSeason\r\n          ? \"It's Altcoin Season! ðŸš€\"\r\n          : \"It's not Altcoin Season. ðŸ“‰\"}\r\n      </h2>\r\n      <div className=\"relative w-full bg-gray-300 h-4 rounded-full mb-6 overflow-hidden\">\r\n        <div\r\n          className={`h-4 rounded-full transition-all duration-500 ${barColor}`}\r\n          style={{ width: `${percentage}%` }}\r\n        ></div>\r\n      </div>\r\n      <p className=\"text-lg text-gray-700 dark:text-gray-300 text-center mb-4\">\r\n        <span className=\"font-semibold text-gray-900 dark:text-white\">\r\n          {outperformingCount}\r\n        </span>{\" \"}\r\n        out of\r\n        <span className=\"font-semibold text-gray-900 dark:text-white\">\r\n          {\" \"}\r\n          {totalAltcoins}{\" \"}\r\n        </span>\r\n        altcoins have outperformed Bitcoin in the last 24 hours.\r\n      </p>\r\n      {outperformingCoins.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-4 text-center\">\r\n            Coins outperforming Bitcoin:\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            {outperformingCoins.map((coin, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"flex items-center justify-between p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md hover:scale-105 transition-transform\"\r\n                onClick={fetchAltcoinSeasonData}\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <img\r\n                    src={coin.image}\r\n                    alt={coin.name}\r\n                    className=\"w-8 h-8 rounded-full\"\r\n                  />\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {coin.name}\r\n                  </span>\r\n                </div>\r\n                <span\r\n                  className={`font-medium ${\r\n                    coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"\r\n                  }`}\r\n                >\r\n                  {coin.priceChange > 0 ? \"+\" : \"\"}\r\n                  {coin.priceChange.toFixed(2)}%\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {errorMessage && (\r\n        <div className=\"text-center text-red-500 mt-4\">{errorMessage}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMqB,KAAK,GAAG,IAAI,CAAC,CAAC;;EAEpB,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAIL,gBAAgB,EAAE;MACpBG,eAAe,CAAC,yCAAyC,CAAC;MAC1D;IACF;IAEA,IAAI;MACFZ,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0GACF,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,MAAMC,aAAa,GAAG,CACpB,QAAQ,EACR,UAAU,EACV,iBAAiB,EACjB,cAAc,EACd,aAAa,EACb,KAAK,EACL,SAAS,EACT,eAAe,EACf,MAAM,EACN,kBAAkB,EAClB,sBAAsB,EACtB,kBAAkB,EAClB,MAAM,EACN,cAAc,EACd,cAAc,EACd,aAAa,EACb,OAAO,EACP,aAAa,EACb,mBAAmB,EACnB,YAAY,EACZ,WAAW,EACX,oBAAoB,EACpB,2BAA2B,EAC3B,oBAAoB,EACpB,cAAc,EACd,UAAU,EACV,kBAAkB,EAClB,uBAAuB,EACvB,qBAAqB,EACrB,iBAAiB,CAClB;MAED,MAAMC,YAAY,GAAGH,IAAI,CAACI,MAAM,CAC7BC,IAAI,IAAK,CAACH,aAAa,CAACI,QAAQ,CAACD,IAAI,CAACE,EAAE,CAC3C,CAAC;MACDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEN,YAAY,CAAC;MAC3C,IAAIO,sBAAsB,GAAG,CAAC;MAC9B,MAAMC,iBAAiB,GAAGR,YAAY,CAACS,MAAM;MAC7C,MAAMC,sBAAsB,GAAG,EAAE;MAEjC,MAAMC,OAAO,GAAGd,IAAI,CAACe,IAAI,CAAEV,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAK,SAAS,CAAC;MAC1D,IAAI,CAACO,OAAO,EAAE;QACZN,OAAO,CAACQ,KAAK,CAAC,wBAAwB,CAAC;QACvC;MACF;MAEA,KAAK,IAAIX,IAAI,IAAIF,YAAY,EAAE;QAC7B,IACEE,IAAI,CAACY,2BAA2B,GAAGH,OAAO,CAACG,2BAA2B,EACtE;UACAP,sBAAsB,EAAE;UACxBG,sBAAsB,CAACK,IAAI,CAAC;YAC1BC,IAAI,EAAEd,IAAI,CAACc,IAAI;YACfC,WAAW,EAAEf,IAAI,CAACY,2BAA2B;YAC7CI,KAAK,EAAEhB,IAAI,CAACgB;UACd,CAAC,CAAC;QACJ;MACF;MAEApC,qBAAqB,CAACyB,sBAAsB,CAAC;MAC7CvB,gBAAgB,CAACwB,iBAAiB,CAAC;MACnCpB,qBAAqB,CAACsB,sBAAsB,CAAC;MAC7CxB,aAAa,CAAEqB,sBAAsB,GAAGC,iBAAiB,GAAI,GAAG,CAAC;MACjE9B,kBAAkB,CACf6B,sBAAsB,GAAGC,iBAAiB,GAAI,GAAG,IAAI,EACxD,CAAC;IACH,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DnC,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;MACjBU,mBAAmB,CAAC,IAAI,CAAC;MACzB6B,UAAU,CAAC,MAAM;QACf7B,mBAAmB,CAAC,KAAK,CAAC;QAC1BE,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;MACvB,CAAC,EAAEC,KAAK,CAAC;IACX;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACduB,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIf,OAAO,EACT,oBAAOL,OAAA;IAAK8C,SAAS,EAAC,mCAAmC;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE5E,MAAMC,QAAQ,GACZzC,UAAU,IAAI,EAAE,GACZ,cAAc,GACdA,UAAU,IAAI,EAAE,GAChB,cAAc,GACdA,UAAU,IAAI,EAAE,GAChB,eAAe,GACfA,UAAU,IAAI,EAAE,GAChB,eAAe,GACf,YAAY;EAElBE,kBAAkB,CAACwC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACZ,WAAW,GAAGW,CAAC,CAACX,WAAW,CAAC;EAEhE,oBACE3C,OAAA;IAAK8C,SAAS,EAAC,+FAA+F;IAAAC,QAAA,gBAC5G/C,OAAA;MAAI8C,SAAS,EAAC,mEAAmE;MAAAC,QAAA,EAC9E5C,eAAe,GACZ,yBAAyB,GACzB;IAA6B;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACLnD,OAAA;MAAK8C,SAAS,EAAC,mEAAmE;MAAAC,QAAA,eAChF/C,OAAA;QACE8C,SAAS,EAAE,gDAAgDM,QAAQ,EAAG;QACtEI,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAG9C,UAAU;QAAI;MAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNnD,OAAA;MAAG8C,SAAS,EAAC,2DAA2D;MAAAC,QAAA,gBACtE/C,OAAA;QAAM8C,SAAS,EAAC,6CAA6C;QAAAC,QAAA,EAC1DxC;MAAkB;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,EAAC,GAAG,EAAC,QAEZ,eAAAnD,OAAA;QAAM8C,SAAS,EAAC,6CAA6C;QAAAC,QAAA,GAC1D,GAAG,EACHtC,aAAa,EAAE,GAAG;MAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,4DAET;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACHtC,kBAAkB,CAACsB,MAAM,GAAG,CAAC,iBAC5BnC,OAAA;MAAK8C,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB/C,OAAA;QAAI8C,SAAS,EAAC,sEAAsE;QAAAC,QAAA,EAAC;MAErF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLnD,OAAA;QAAK8C,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EACnDlC,kBAAkB,CAAC6C,GAAG,CAAC,CAAC9B,IAAI,EAAE+B,KAAK,kBAClC3D,OAAA;UAEE8C,SAAS,EAAC,8HAA8H;UACxIc,OAAO,EAAExC,sBAAuB;UAAA2B,QAAA,gBAEhC/C,OAAA;YAAK8C,SAAS,EAAC,6BAA6B;YAAAC,QAAA,gBAC1C/C,OAAA;cACE6D,GAAG,EAAEjC,IAAI,CAACgB,KAAM;cAChBkB,GAAG,EAAElC,IAAI,CAACc,IAAK;cACfI,SAAS,EAAC;YAAsB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,eACFnD,OAAA;cAAM8C,SAAS,EAAC,2CAA2C;cAAAC,QAAA,EACxDnB,IAAI,CAACc;YAAI;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNnD,OAAA;YACE8C,SAAS,EAAE,eACTlB,IAAI,CAACe,WAAW,GAAG,CAAC,GAAG,gBAAgB,GAAG,cAAc,EACvD;YAAAI,QAAA,GAEFnB,IAAI,CAACe,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,EAC/Bf,IAAI,CAACe,WAAW,CAACoB,OAAO,CAAC,CAAC,CAAC,EAAC,GAC/B;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GArBFQ,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAsBP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EACAlC,YAAY,iBACXjB,OAAA;MAAK8C,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAAE9B;IAAY;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjD,EAAA,CA7LID,aAAa;AAAA+D,EAAA,GAAb/D,aAAa;AA+LnB,eAAeA,aAAa;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}