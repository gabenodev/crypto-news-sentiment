{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltcoinSeason = () => {\n  _s();\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [outperformingCount, setOutperformingCount] = useState(0);\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\n  useEffect(() => {\n    const fetchAltcoinSeasonData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=50&page=1\");\n        const data = await response.json();\n        const excludedCoins = [\"tether\", \"usd-coin\", \"wrapped-bitcoin\", \"staked-ether\", \"binance-usd\", \"dai\", \"trueusd\", \"wrapped-steth\", \"weth\", \"ethereum-classic\", \"coinbase-wrapped-btc\", \"wrapped-ethereum\", \"usds\", \"wrapped-eeth\", \"bitcoin-cash\", \"wrapped-ust\", \"susds\"];\n        const filteredData = data.filter(coin => !excludedCoins.includes(coin.id));\n        console.log(\"All Altcoins:\", filteredData);\n        let outperformingCountTemp = 0;\n        const totalAltcoinsTemp = filteredData.length;\n        const outperformingCoinsTemp = [];\n        const bitcoin = data.find(coin => coin.id === \"bitcoin\");\n        if (!bitcoin) {\n          console.error(\"Bitcoin data not found\");\n          return;\n        }\n        for (let coin of filteredData) {\n          if (coin.price_change_percentage_24h && bitcoin.price_change_percentage_24h) {\n            if (coin.price_change_percentage_24h > bitcoin.price_change_percentage_24h) {\n              outperformingCountTemp++;\n              outperformingCoinsTemp.push({\n                name: coin.name,\n                priceChange: coin.price_change_percentage_24h\n              });\n            }\n          }\n        }\n        setOutperformingCount(outperformingCountTemp);\n        setTotalAltcoins(totalAltcoinsTemp);\n        setOutperformingCoins(outperformingCoinsTemp);\n        const percentageTemp = outperformingCountTemp / totalAltcoinsTemp * 100;\n        setPercentage(percentageTemp);\n        setIsAltcoinSeason(percentageTemp >= 75);\n      } catch (error) {\n        console.error(\"Error fetching altcoin season data:\", error);\n        setIsAltcoinSeason(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAltcoinSeasonData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  let barColor = \"#ff4444\";\n  if (percentage >= 80) {\n    barColor = \"#16a34a\";\n  } else if (percentage >= 60) {\n    barColor = \"#4ade80\";\n  } else if (percentage >= 40) {\n    barColor = \"#fcd34d\";\n  } else if (percentage >= 20) {\n    barColor = \"#fb923c\";\n  } else {\n    barColor = \"#ff4444\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-lg mx-auto rounded-lg bg-white shadow-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4 text-gray-800\",\n      children: isAltcoinSeason ? \"It's Altcoin Season (75% of the Top 50 coins are outperforming Bitcoin)\" : \"It's not Altcoin Season.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-300 h-4 rounded-full mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-4 rounded-full\",\n        style: {\n          width: `${percentage}%`,\n          backgroundColor: barColor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-600\",\n      children: [outperformingCount, \" of \", totalAltcoins, \" altcoins have performed better than Bitcoin in the last 24 hours.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 mt-2 text-sm\",\n      children: \"Price Change in the Last 24H\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), outperformingCoins.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-xl text-gray-800 mb-4\",\n        children: \"Coins outperforming Bitcoin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n        children: outperformingCoins.map((coin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-4 bg-gray-100 rounded-lg shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://assets.coingecko.com/coins/images/${index + 1}/small.png`,\n              alt: coin.name,\n              className: \"w-8 h-8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-gray-800\",\n              children: coin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `font-medium ${coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"}`,\n            children: [coin.priceChange > 0 ? \"+\" : \"\", coin.priceChange.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"QH53e5DDPQJyfxW8/Bv0LV02L8c=\");\n_c = AltcoinSeason;\nexport default AltcoinSeason;\nvar _c;\n$RefreshReg$(_c, \"AltcoinSeason\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AltcoinSeason","_s","isAltcoinSeason","setIsAltcoinSeason","loading","setLoading","outperformingCount","setOutperformingCount","totalAltcoins","setTotalAltcoins","percentage","setPercentage","outperformingCoins","setOutperformingCoins","fetchAltcoinSeasonData","response","fetch","data","json","excludedCoins","filteredData","filter","coin","includes","id","console","log","outperformingCountTemp","totalAltcoinsTemp","length","outperformingCoinsTemp","bitcoin","find","error","price_change_percentage_24h","push","name","priceChange","percentageTemp","children","fileName","_jsxFileName","lineNumber","columnNumber","barColor","className","style","width","backgroundColor","map","index","src","alt","toFixed","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst AltcoinSeason = () => {\r\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [outperformingCount, setOutperformingCount] = useState(0);\r\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAltcoinSeasonData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=50&page=1\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const excludedCoins = [\r\n          \"tether\",\r\n          \"usd-coin\",\r\n          \"wrapped-bitcoin\",\r\n          \"staked-ether\",\r\n          \"binance-usd\",\r\n          \"dai\",\r\n          \"trueusd\",\r\n          \"wrapped-steth\",\r\n          \"weth\",\r\n          \"ethereum-classic\",\r\n          \"coinbase-wrapped-btc\",\r\n          \"wrapped-ethereum\",\r\n          \"usds\",\r\n          \"wrapped-eeth\",\r\n          \"bitcoin-cash\",\r\n          \"wrapped-ust\",\r\n          \"susds\",\r\n        ];\r\n\r\n        const filteredData = data.filter(\r\n          (coin) => !excludedCoins.includes(coin.id)\r\n        );\r\n\r\n        console.log(\"All Altcoins:\", filteredData);\r\n\r\n        let outperformingCountTemp = 0;\r\n        const totalAltcoinsTemp = filteredData.length;\r\n        const outperformingCoinsTemp = [];\r\n\r\n        const bitcoin = data.find((coin) => coin.id === \"bitcoin\");\r\n        if (!bitcoin) {\r\n          console.error(\"Bitcoin data not found\");\r\n          return;\r\n        }\r\n\r\n        for (let coin of filteredData) {\r\n          if (\r\n            coin.price_change_percentage_24h &&\r\n            bitcoin.price_change_percentage_24h\r\n          ) {\r\n            if (\r\n              coin.price_change_percentage_24h >\r\n              bitcoin.price_change_percentage_24h\r\n            ) {\r\n              outperformingCountTemp++;\r\n              outperformingCoinsTemp.push({\r\n                name: coin.name,\r\n                priceChange: coin.price_change_percentage_24h,\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        setOutperformingCount(outperformingCountTemp);\r\n        setTotalAltcoins(totalAltcoinsTemp);\r\n        setOutperformingCoins(outperformingCoinsTemp);\r\n\r\n        const percentageTemp =\r\n          (outperformingCountTemp / totalAltcoinsTemp) * 100;\r\n        setPercentage(percentageTemp);\r\n\r\n        setIsAltcoinSeason(percentageTemp >= 75);\r\n      } catch (error) {\r\n        console.error(\"Error fetching altcoin season data:\", error);\r\n        setIsAltcoinSeason(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAltcoinSeasonData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  let barColor = \"#ff4444\";\r\n\r\n  if (percentage >= 80) {\r\n    barColor = \"#16a34a\";\r\n  } else if (percentage >= 60) {\r\n    barColor = \"#4ade80\";\r\n  } else if (percentage >= 40) {\r\n    barColor = \"#fcd34d\";\r\n  } else if (percentage >= 20) {\r\n    barColor = \"#fb923c\";\r\n  } else {\r\n    barColor = \"#ff4444\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-lg mx-auto rounded-lg bg-white shadow-xl\">\r\n      <h2 className=\"text-2xl font-semibold mb-4 text-gray-800\">\r\n        {isAltcoinSeason\r\n          ? \"It's Altcoin Season (75% of the Top 50 coins are outperforming Bitcoin)\"\r\n          : \"It's not Altcoin Season.\"}\r\n      </h2>\r\n\r\n      <div className=\"w-full bg-gray-300 h-4 rounded-full mb-4\">\r\n        <div\r\n          className=\"h-4 rounded-full\"\r\n          style={{\r\n            width: `${percentage}%`,\r\n            backgroundColor: barColor,\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      <p className=\"text-lg text-gray-600\">\r\n        {outperformingCount} of {totalAltcoins} altcoins have performed better\r\n        than Bitcoin in the last 24 hours.\r\n      </p>\r\n\r\n      {/* Eticheta pentru 24H */}\r\n      <p className=\"text-gray-500 mt-2 text-sm\">Price Change in the Last 24H</p>\r\n\r\n      {outperformingCoins.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"font-semibold text-xl text-gray-800 mb-4\">\r\n            Coins outperforming Bitcoin:\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            {outperformingCoins.map((coin, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"flex items-center justify-between p-4 bg-gray-100 rounded-lg shadow-sm\"\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <img\r\n                    src={`https://assets.coingecko.com/coins/images/${\r\n                      index + 1\r\n                    }/small.png`}\r\n                    alt={coin.name}\r\n                    className=\"w-8 h-8\"\r\n                  />\r\n                  <span className=\"font-medium text-gray-800\">{coin.name}</span>\r\n                </div>\r\n                <span\r\n                  className={`font-medium ${\r\n                    coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"\r\n                  }`}\r\n                >\r\n                  {coin.priceChange > 0 ? \"+\" : \"\"}\r\n                  {coin.priceChange.toFixed(2)}%\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}