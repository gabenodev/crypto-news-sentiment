{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltcoinSeason = () => {\n  _s();\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\n  const [selectedCoin, setSelectedCoin] = useState(null);\n  useEffect(() => {\n    const fetchAltcoinSeasonData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\");\n        const data = await response.json();\n        const bitcoin = data.find(coin => coin.id === \"bitcoin\");\n        if (!bitcoin) {\n          console.error(\"Bitcoin data not found\");\n          return;\n        }\n        const filteredCoins = data.filter(coin => coin.price_change_percentage_24h > bitcoin.price_change_percentage_24h);\n        setOutperformingCoins(filteredCoins);\n        setIsAltcoinSeason(filteredCoins.length / data.length * 100 >= 75);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAltcoinSeasonData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-gray-700 text-lg\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex space-x-6 p-6 max-w-6xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"p-6 max-w-lg rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\",\n      animate: {\n        x: selectedCoin ? -50 : 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\",\n        children: isAltcoinSeason ? \"It's Altcoin Season! ðŸš€\" : \"It's not Altcoin Season. ðŸ“‰\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n        children: outperformingCoins.map(coin => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md flex items-center cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-700\",\n          onClick: () => setSelectedCoin(coin),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: coin.image,\n            alt: coin.name,\n            className: \"w-8 h-8 mr-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-gray-900 dark:text-white\",\n              children: coin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/3 text-right\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `font-medium ${coin.price_change_percentage_24h > 0 ? \"text-green-600\" : \"text-red-500\"}`,\n              children: [coin.price_change_percentage_24h.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, coin.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), selectedCoin && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"p-6 w-96 bg-white shadow-2xl dark:bg-gray-900 rounded-lg\",\n      initial: {\n        opacity: 0,\n        x: 50\n      },\n      animate: {\n        opacity: 1,\n        x: 0\n      },\n      exit: {\n        opacity: 0,\n        x: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 dark:text-white text-center mb-4\",\n        children: [selectedCoin.name, \" Price Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AltcoinChart, {\n        coinId: selectedCoin.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"rgBHLASHE7EGZebsi7fxTmI/12Q=\");\n_c = AltcoinSeason;\nconst AltcoinChart = ({\n  coinId\n}) => {\n  _s2();\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await fetch(`https://api.coingecko.com/api/v3/coins/${coinId}/market_chart?vs_currency=usd&days=7&interval=daily`);\n        const data = await response.json();\n        const formattedData = data.prices.map(entry => ({\n          date: new Date(entry[0]).toLocaleDateString(),\n          price: entry[1]\n        }));\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(\"Error fetching chart data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChartData();\n  }, [coinId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-40\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => [`$${value.toFixed(2)}`, \"Price\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: \"#23d996\",\n          strokeWidth: 2,\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s2(AltcoinChart, \"k/gbINSN6RrWOQpLWjBNnKv+lC4=\");\n_c2 = AltcoinChart;\nexport default AltcoinSeason;\nvar _c, _c2;\n$RefreshReg$(_c, \"AltcoinSeason\");\n$RefreshReg$(_c2, \"AltcoinChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","Tooltip","ResponsiveContainer","motion","jsxDEV","_jsxDEV","AltcoinSeason","_s","isAltcoinSeason","setIsAltcoinSeason","loading","setLoading","outperformingCoins","setOutperformingCoins","selectedCoin","setSelectedCoin","fetchAltcoinSeasonData","response","fetch","data","json","bitcoin","find","coin","id","console","error","filteredCoins","filter","price_change_percentage_24h","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","div","animate","x","map","onClick","src","image","alt","name","toFixed","initial","opacity","exit","AltcoinChart","coinId","_c","_s2","chartData","setChartData","fetchChartData","formattedData","prices","entry","date","Date","toLocaleDateString","price","width","height","formatter","value","type","dataKey","stroke","strokeWidth","dot","_c2","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { LineChart, Line, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst AltcoinSeason = () => {\r\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\r\n  const [selectedCoin, setSelectedCoin] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAltcoinSeasonData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const bitcoin = data.find((coin) => coin.id === \"bitcoin\");\r\n        if (!bitcoin) {\r\n          console.error(\"Bitcoin data not found\");\r\n          return;\r\n        }\r\n\r\n        const filteredCoins = data.filter(\r\n          (coin) =>\r\n            coin.price_change_percentage_24h >\r\n            bitcoin.price_change_percentage_24h\r\n        );\r\n\r\n        setOutperformingCoins(filteredCoins);\r\n        setIsAltcoinSeason((filteredCoins.length / data.length) * 100 >= 75);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAltcoinSeasonData();\r\n  }, []);\r\n\r\n  if (loading)\r\n    return <div className=\"text-center text-gray-700 text-lg\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"flex space-x-6 p-6 max-w-6xl mx-auto\">\r\n      <motion.div\r\n        className=\"p-6 max-w-lg rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\"\r\n        animate={{ x: selectedCoin ? -50 : 0 }}\r\n      >\r\n        <h2 className=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\">\r\n          {isAltcoinSeason\r\n            ? \"It's Altcoin Season! ðŸš€\"\r\n            : \"It's not Altcoin Season. ðŸ“‰\"}\r\n        </h2>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n          {outperformingCoins.map((coin) => (\r\n            <div\r\n              key={coin.id}\r\n              className=\"p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md flex items-center cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-700\"\r\n              onClick={() => setSelectedCoin(coin)}\r\n            >\r\n              <img src={coin.image} alt={coin.name} className=\"w-8 h-8 mr-3\" />\r\n              <div className=\"w-1/3\">\r\n                <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                  {coin.name}\r\n                </span>\r\n              </div>\r\n              <div className=\"w-1/3 text-right\">\r\n                <span\r\n                  className={`font-medium ${\r\n                    coin.price_change_percentage_24h > 0\r\n                      ? \"text-green-600\"\r\n                      : \"text-red-500\"\r\n                  }`}\r\n                >\r\n                  {coin.price_change_percentage_24h.toFixed(2)}%\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n      {selectedCoin && (\r\n        <motion.div\r\n          className=\"p-6 w-96 bg-white shadow-2xl dark:bg-gray-900 rounded-lg\"\r\n          initial={{ opacity: 0, x: 50 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          exit={{ opacity: 0, x: 50 }}\r\n        >\r\n          <h3 className=\"text-xl font-semibold text-gray-800 dark:text-white text-center mb-4\">\r\n            {selectedCoin.name} Price Chart\r\n          </h3>\r\n          <AltcoinChart coinId={selectedCoin.id} />\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AltcoinChart = ({ coinId }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchChartData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.coingecko.com/api/v3/coins/${coinId}/market_chart?vs_currency=usd&days=7&interval=daily`\r\n        );\r\n        const data = await response.json();\r\n        const formattedData = data.prices.map((entry) => ({\r\n          date: new Date(entry[0]).toLocaleDateString(),\r\n          price: entry[1],\r\n        }));\r\n        setChartData(formattedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chart data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchChartData();\r\n  }, [coinId]);\r\n\r\n  if (loading) return <p>Loading chart...</p>;\r\n\r\n  return (\r\n    <div className=\"w-full h-40\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart data={chartData}>\r\n          <Tooltip formatter={(value) => [`$${value.toFixed(2)}`, \"Price\"]} />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"price\"\r\n            stroke=\"#23d996\"\r\n            strokeWidth={2}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}