{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\SentimentChart.js\",\n  _s = $RefreshSig$();\n// src/components/SentimentChart.js\nimport SentimentGauge from \"./SentimentGauge\";\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { format } from \"date-fns\";\n\n// Înregistrăm componentele Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction SentimentChart() {\n  _s();\n  const [sentimentData, setSentimentData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [timeframe, setTimeframe] = useState(\"7\"); // Default la 7 zile\n\n  // Fetch data în funcție de intervalul de timp selectat\n  const fetchSentimentData = async limit => {\n    try {\n      let url = \"\";\n      // Verificăm dacă vrem să luăm datele pentru întreaga perioadă\n      if (limit === \"max\") {\n        // API-ul nu acceptă o valoare directă de \"max\", deci folosim 2000\n        url = \"https://api.alternative.me/fng/?limit=2000&format=json\";\n      } else {\n        url = `https://api.alternative.me/fng/?limit=${limit}&format=json`;\n      }\n      const response = await axios.get(url);\n      const sentimentScores = response.data.data.map(item => parseInt(item.value));\n      const sentimentTimestamps = response.data.data.map(item => format(new Date(item.timestamp * 1000), \"MMM dd, yyyy\"));\n\n      // Inversăm datele pentru a avea cea mai recentă dată în dreapta\n      const reversedTimestamps = sentimentTimestamps.reverse();\n      const reversedScores = sentimentScores.reverse();\n      setSentimentData({\n        labels: reversedTimestamps,\n        datasets: [{\n          label: \"Sentiment Trend (Fear & Greed Index)\",\n          data: reversedScores,\n          fill: false,\n          borderColor: \"#23d996\",\n          // Culoare linie turcoaz\n          backgroundColor: \"#23d996\",\n          // Culoare linie turcoaz\n          tension: 0.1,\n          pointBackgroundColor: \"#23d996\",\n          // Culoare puncte turcoaz\n          pointBorderColor: \"#23d996\",\n          // Culoare puncte turcoaz\n          pointRadius: 3,\n          // Puncte mai mici\n          pointHoverRadius: 4,\n          // Puncte la hover\n          borderWidth: 2 // Grosimea liniei\n        }]\n      });\n    } catch (error) {\n      console.error(\"Error fetching sentiment data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchSentimentData(timeframe); // Fetch data când se schimbă intervalul de timp\n  }, [timeframe]);\n  const handleTimeframeChange = e => {\n    setTimeframe(e.target.value);\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Date\"\n        },\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 10,\n          maxRotation: 45\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Fear and Greed Index\"\n        },\n        ticks: {\n          min: 0,\n          max: 100,\n          stepSize: 10\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold text-gray-800 dark:text-white text-black\",\n      children: \"Market Sentiment (Fear and Greed Index)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timeframe,\n        onChange: handleTimeframeChange,\n        className: \"bg-gray-200 text-gray-700 px-4 py-2 rounded-md appearance-none\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7\",\n          children: \"Last 7 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"30\",\n          children: \"Last 30 Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"365\",\n          children: \"Last 1 Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"max\",\n          children: \"All Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: sentimentData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex flex-col items-center\",\n      children: sentimentData.datasets.length > 0 && /*#__PURE__*/_jsxDEV(SentimentGauge, {\n        value: sentimentData.datasets[0].data.slice(-1)[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-12 p-6 rounded-lg shadow-md bg-white dark:bg-gray-900\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4\",\n        children: \"Understanding the Fear & Greed Index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 dark:text-gray-300 leading-relaxed\",\n        children: [\"The \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fear & Greed Index\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), \" is a crucial sentiment indicator that reflects investor emotions in the market. Ranging from\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), \" (extreme fear) to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 48\n        }, this), \" (extreme greed), it helps traders identify potential market reversals.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-xl font-semibold text-gray-900 dark:text-gray-100 mt-6\",\n        children: \"\\uD83D\\uDCC8 Sentiment Trend Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 dark:text-gray-300 leading-relaxed\",\n        children: \"The line chart above shows historical fluctuations of the Fear & Greed Index. By analyzing past trends, traders can gauge whether the market sentiment is shifting towards optimism or pessimism.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-xl font-semibold text-gray-900 dark:text-gray-100 mt-6\",\n        children: \"\\uD83C\\uDFAF Fear & Greed Gauge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 dark:text-gray-300 leading-relaxed\",\n        children: \"The gauge below provides a real-time snapshot of market sentiment. A needle pointing toward fear suggests bearishness, while a shift toward greed indicates bullish momentum. This tool is best used alongside technical and fundamental analysis.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(SentimentChart, \"TR8hk/nLR6lr8XwSLXxhVvr+hCo=\");\n_c = SentimentChart;\nexport default SentimentChart;\nvar _c;\n$RefreshReg$(_c, \"SentimentChart\");","map":{"version":3,"names":["SentimentGauge","React","useEffect","useState","Line","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","format","jsxDEV","_jsxDEV","register","SentimentChart","_s","sentimentData","setSentimentData","labels","datasets","timeframe","setTimeframe","fetchSentimentData","limit","url","response","get","sentimentScores","data","map","item","parseInt","value","sentimentTimestamps","Date","timestamp","reversedTimestamps","reverse","reversedScores","label","fill","borderColor","backgroundColor","tension","pointBackgroundColor","pointBorderColor","pointRadius","pointHoverRadius","borderWidth","error","console","handleTimeframeChange","e","target","options","responsive","scales","x","title","display","text","ticks","autoSkip","maxTicksLimit","maxRotation","y","min","max","stepSize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","length","slice","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/SentimentChart.js"],"sourcesContent":["// src/components/SentimentChart.js\r\nimport SentimentGauge from \"./SentimentGauge\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { format } from \"date-fns\";\r\n\r\n// Înregistrăm componentele Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction SentimentChart() {\r\n  const [sentimentData, setSentimentData] = useState({\r\n    labels: [],\r\n    datasets: [],\r\n  });\r\n  const [timeframe, setTimeframe] = useState(\"7\"); // Default la 7 zile\r\n\r\n  // Fetch data în funcție de intervalul de timp selectat\r\n  const fetchSentimentData = async (limit) => {\r\n    try {\r\n      let url = \"\";\r\n      // Verificăm dacă vrem să luăm datele pentru întreaga perioadă\r\n      if (limit === \"max\") {\r\n        // API-ul nu acceptă o valoare directă de \"max\", deci folosim 2000\r\n        url = \"https://api.alternative.me/fng/?limit=2000&format=json\";\r\n      } else {\r\n        url = `https://api.alternative.me/fng/?limit=${limit}&format=json`;\r\n      }\r\n\r\n      const response = await axios.get(url);\r\n\r\n      const sentimentScores = response.data.data.map((item) =>\r\n        parseInt(item.value)\r\n      );\r\n      const sentimentTimestamps = response.data.data.map((item) =>\r\n        format(new Date(item.timestamp * 1000), \"MMM dd, yyyy\")\r\n      );\r\n\r\n      // Inversăm datele pentru a avea cea mai recentă dată în dreapta\r\n      const reversedTimestamps = sentimentTimestamps.reverse();\r\n      const reversedScores = sentimentScores.reverse();\r\n\r\n      setSentimentData({\r\n        labels: reversedTimestamps,\r\n        datasets: [\r\n          {\r\n            label: \"Sentiment Trend (Fear & Greed Index)\",\r\n            data: reversedScores,\r\n            fill: false,\r\n            borderColor: \"#23d996\", // Culoare linie turcoaz\r\n            backgroundColor: \"#23d996\", // Culoare linie turcoaz\r\n            tension: 0.1,\r\n            pointBackgroundColor: \"#23d996\", // Culoare puncte turcoaz\r\n            pointBorderColor: \"#23d996\", // Culoare puncte turcoaz\r\n            pointRadius: 3, // Puncte mai mici\r\n            pointHoverRadius: 4, // Puncte la hover\r\n            borderWidth: 2, // Grosimea liniei\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching sentiment data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSentimentData(timeframe); // Fetch data când se schimbă intervalul de timp\r\n  }, [timeframe]);\r\n\r\n  const handleTimeframeChange = (e) => {\r\n    setTimeframe(e.target.value);\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        title: { display: true, text: \"Date\" },\r\n        ticks: { autoSkip: true, maxTicksLimit: 10, maxRotation: 45 },\r\n      },\r\n      y: {\r\n        title: { display: true, text: \"Fear and Greed Index\" },\r\n        ticks: { min: 0, max: 100, stepSize: 10 },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\r\n      <h2 className=\"text-3xl font-semibold text-gray-800 dark:text-white text-black\">\r\n        Market Sentiment (Fear and Greed Index)\r\n      </h2>\r\n\r\n      {/* Dropdown pentru alegerea intervalului de timp */}\r\n      <div className=\"mt-6\">\r\n        <select\r\n          value={timeframe}\r\n          onChange={handleTimeframeChange}\r\n          className=\"bg-gray-200 text-gray-700 px-4 py-2 rounded-md appearance-none\"\r\n        >\r\n          <option value=\"7\">Last 7 Days</option>\r\n          <option value=\"30\">Last 30 Days</option>\r\n          <option value=\"365\">Last 1 Year</option>\r\n          <option value=\"max\">All Time</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Graficul Sentimentului (Fear and Greed Index) */}\r\n      <div className=\"mt-6\">\r\n        <Line data={sentimentData} options={options} />\r\n      </div>\r\n\r\n      {/* Indicatorul Fear and Greed Index deasupra graficului */}\r\n      <div className=\"mt-6 flex flex-col items-center\">\r\n        {sentimentData.datasets.length > 0 && (\r\n          <SentimentGauge value={sentimentData.datasets[0].data.slice(-1)[0]} />\r\n        )}\r\n      </div>\r\n      {/* Explicația graficelor */}\r\n      <div className=\"mt-12 p-6 rounded-lg shadow-md bg-white dark:bg-gray-900\">\r\n        <h3 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-4\">\r\n          Understanding the Fear & Greed Index\r\n        </h3>\r\n        <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\r\n          The <strong>Fear & Greed Index</strong> is a crucial sentiment\r\n          indicator that reflects investor emotions in the market. Ranging from{\" \"}\r\n          <strong>0</strong> (extreme fear) to <strong>100</strong> (extreme\r\n          greed), it helps traders identify potential market reversals.\r\n        </p>\r\n\r\n        <h4 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 mt-6\">\r\n          📈 Sentiment Trend Chart\r\n        </h4>\r\n        <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\r\n          The line chart above shows historical fluctuations of the Fear & Greed\r\n          Index. By analyzing past trends, traders can gauge whether the market\r\n          sentiment is shifting towards optimism or pessimism.\r\n        </p>\r\n\r\n        <h4 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 mt-6\">\r\n          🎯 Fear & Greed Gauge\r\n        </h4>\r\n        <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\r\n          The gauge below provides a real-time snapshot of market sentiment. A\r\n          needle pointing toward fear suggests bearishness, while a shift toward\r\n          greed indicates bullish momentum. This tool is best used alongside\r\n          technical and fundamental analysis.\r\n        </p>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SentimentChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}