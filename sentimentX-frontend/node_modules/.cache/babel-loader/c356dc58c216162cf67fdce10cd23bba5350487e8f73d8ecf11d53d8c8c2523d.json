{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltcoinSeason = () => {\n  _s();\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [outperformingCount, setOutperformingCount] = useState(0);\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\n  const [selectedCoin, setSelectedCoin] = useState(null);\n  const [loadingGraph, setLoadingGraph] = useState(false);\n  const [requestError, setRequestError] = useState(false);\n  const fetchCoinGraph = async coinId => {\n    if (loadingGraph || requestError) return;\n    setLoadingGraph(true);\n    setRequestError(false);\n    try {\n      // Delay to avoid too many requests\n      const delay = setTimeout(async () => {\n        const response = await fetch(`https://api.coingecko.com/api/v3/coins/${coinId}/market_chart?vs_currency=usd&days=7`);\n        const data = await response.json();\n        // Do something with the graph data (e.g., update state)\n        setSelectedCoin({\n          id: coinId,\n          data: data\n        });\n      }, 5000);\n      return () => clearTimeout(delay);\n    } catch (error) {\n      setRequestError(true);\n      console.error(\"Error fetching graph data:\", error);\n    } finally {\n      setLoadingGraph(false);\n    }\n  };\n  useEffect(() => {\n    const fetchAltcoinSeasonData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\");\n        const data = await response.json();\n        const excludedCoins = [\n          // List of excluded coins...\n        ];\n        const filteredData = data.filter(coin => !excludedCoins.includes(coin.id));\n        let outperformingCountTemp = 0;\n        const totalAltcoinsTemp = filteredData.length;\n        const outperformingCoinsTemp = [];\n        const bitcoin = data.find(coin => coin.id === \"bitcoin\");\n        if (!bitcoin) {\n          console.error(\"Bitcoin data not found\");\n          return;\n        }\n        for (let coin of filteredData) {\n          if (coin.price_change_percentage_24h > bitcoin.price_change_percentage_24h) {\n            outperformingCountTemp++;\n            outperformingCoinsTemp.push({\n              name: coin.name,\n              priceChange: coin.price_change_percentage_24h,\n              image: coin.image,\n              id: coin.id\n            });\n          }\n        }\n        setOutperformingCount(outperformingCountTemp);\n        setTotalAltcoins(totalAltcoinsTemp);\n        setOutperformingCoins(outperformingCoinsTemp);\n        setPercentage(outperformingCountTemp / totalAltcoinsTemp * 100);\n        setIsAltcoinSeason(outperformingCountTemp / totalAltcoinsTemp * 100 >= 75);\n      } catch (error) {\n        console.error(\"Error fetching altcoin season data:\", error);\n        setIsAltcoinSeason(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAltcoinSeasonData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-gray-700 text-lg\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 12\n  }, this);\n  const barColor = percentage >= 80 ? \"bg-green-600\" : percentage >= 60 ? \"bg-green-400\" : percentage >= 40 ? \"bg-yellow-400\" : percentage >= 20 ? \"bg-orange-400\" : \"bg-red-500\";\n  outperformingCoins.sort((a, b) => b.priceChange - a.priceChange);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\",\n      children: isAltcoinSeason ? \"It's Altcoin Season! ðŸš€\" : \"It's not Altcoin Season. ðŸ“‰\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full bg-gray-300 h-4 rounded-full mb-6 overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-4 rounded-full transition-all duration-500 ${barColor}`,\n        style: {\n          width: `${percentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-700 dark:text-gray-300 text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-gray-900 dark:text-white\",\n        children: outperformingCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), \" \", \"out of\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-gray-900 dark:text-white\",\n        children: [\" \", totalAltcoins, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), \"altcoins have outperformed Bitcoin in the last 24 hours.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), requestError && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"text-red-500 text-center\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      exit: {\n        opacity: 0\n      },\n      children: \"Too many requests, please wait a bit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), outperformingCoins.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 dark:text-white mb-4 text-center\",\n        children: \"Coins outperforming Bitcoin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n        children: outperformingCoins.map((coin, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"flex items-center justify-between p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md hover:scale-105 transition-transform\",\n          onClick: () => fetchCoinGraph(coin.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: coin.image,\n              alt: coin.name,\n              className: \"w-8 h-8 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-gray-900 dark:text-white\",\n              children: coin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `font-medium ${coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"}`,\n            children: [coin.priceChange > 0 ? \"+\" : \"\", coin.priceChange.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), selectedCoin && selectedCoin.data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-lg font-semibold text-gray-800 dark:text-white mb-4\",\n        children: [selectedCoin.id, \" - 7 Day Graph\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"kFKQAKpJ0KGO8QmZlpGp6TAC5V8=\");\n_c = AltcoinSeason;\nexport default AltcoinSeason;\nvar _c;\n$RefreshReg$(_c, \"AltcoinSeason\");","map":{"version":3,"names":["React","useEffect","useState","motion","jsxDEV","_jsxDEV","AltcoinSeason","_s","isAltcoinSeason","setIsAltcoinSeason","loading","setLoading","outperformingCount","setOutperformingCount","totalAltcoins","setTotalAltcoins","percentage","setPercentage","outperformingCoins","setOutperformingCoins","selectedCoin","setSelectedCoin","loadingGraph","setLoadingGraph","requestError","setRequestError","fetchCoinGraph","coinId","delay","setTimeout","response","fetch","data","json","id","clearTimeout","error","console","fetchAltcoinSeasonData","excludedCoins","filteredData","filter","coin","includes","outperformingCountTemp","totalAltcoinsTemp","length","outperformingCoinsTemp","bitcoin","find","price_change_percentage_24h","push","name","priceChange","image","className","children","fileName","_jsxFileName","lineNumber","columnNumber","barColor","sort","a","b","style","width","div","initial","opacity","animate","exit","map","index","onClick","src","alt","toFixed","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst AltcoinSeason = () => {\r\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [outperformingCount, setOutperformingCount] = useState(0);\r\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\r\n  const [selectedCoin, setSelectedCoin] = useState(null);\r\n  const [loadingGraph, setLoadingGraph] = useState(false);\r\n  const [requestError, setRequestError] = useState(false);\r\n\r\n  const fetchCoinGraph = async (coinId) => {\r\n    if (loadingGraph || requestError) return;\r\n    setLoadingGraph(true);\r\n    setRequestError(false);\r\n\r\n    try {\r\n      // Delay to avoid too many requests\r\n      const delay = setTimeout(async () => {\r\n        const response = await fetch(\r\n          `https://api.coingecko.com/api/v3/coins/${coinId}/market_chart?vs_currency=usd&days=7`\r\n        );\r\n        const data = await response.json();\r\n        // Do something with the graph data (e.g., update state)\r\n        setSelectedCoin({ id: coinId, data: data });\r\n      }, 5000);\r\n\r\n      return () => clearTimeout(delay);\r\n    } catch (error) {\r\n      setRequestError(true);\r\n      console.error(\"Error fetching graph data:\", error);\r\n    } finally {\r\n      setLoadingGraph(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAltcoinSeasonData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const excludedCoins = [\r\n          // List of excluded coins...\r\n        ];\r\n\r\n        const filteredData = data.filter(\r\n          (coin) => !excludedCoins.includes(coin.id)\r\n        );\r\n\r\n        let outperformingCountTemp = 0;\r\n        const totalAltcoinsTemp = filteredData.length;\r\n        const outperformingCoinsTemp = [];\r\n\r\n        const bitcoin = data.find((coin) => coin.id === \"bitcoin\");\r\n        if (!bitcoin) {\r\n          console.error(\"Bitcoin data not found\");\r\n          return;\r\n        }\r\n\r\n        for (let coin of filteredData) {\r\n          if (\r\n            coin.price_change_percentage_24h >\r\n            bitcoin.price_change_percentage_24h\r\n          ) {\r\n            outperformingCountTemp++;\r\n            outperformingCoinsTemp.push({\r\n              name: coin.name,\r\n              priceChange: coin.price_change_percentage_24h,\r\n              image: coin.image,\r\n              id: coin.id,\r\n            });\r\n          }\r\n        }\r\n\r\n        setOutperformingCount(outperformingCountTemp);\r\n        setTotalAltcoins(totalAltcoinsTemp);\r\n        setOutperformingCoins(outperformingCoinsTemp);\r\n        setPercentage((outperformingCountTemp / totalAltcoinsTemp) * 100);\r\n        setIsAltcoinSeason(\r\n          (outperformingCountTemp / totalAltcoinsTemp) * 100 >= 75\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error fetching altcoin season data:\", error);\r\n        setIsAltcoinSeason(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAltcoinSeasonData();\r\n  }, []);\r\n\r\n  if (loading)\r\n    return <div className=\"text-center text-gray-700 text-lg\">Loading...</div>;\r\n\r\n  const barColor =\r\n    percentage >= 80\r\n      ? \"bg-green-600\"\r\n      : percentage >= 60\r\n      ? \"bg-green-400\"\r\n      : percentage >= 40\r\n      ? \"bg-yellow-400\"\r\n      : percentage >= 20\r\n      ? \"bg-orange-400\"\r\n      : \"bg-red-500\";\r\n\r\n  outperformingCoins.sort((a, b) => b.priceChange - a.priceChange);\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\">\r\n        {isAltcoinSeason\r\n          ? \"It's Altcoin Season! ðŸš€\"\r\n          : \"It's not Altcoin Season. ðŸ“‰\"}\r\n      </h2>\r\n      <div className=\"relative w-full bg-gray-300 h-4 rounded-full mb-6 overflow-hidden\">\r\n        <div\r\n          className={`h-4 rounded-full transition-all duration-500 ${barColor}`}\r\n          style={{ width: `${percentage}%` }}\r\n        ></div>\r\n      </div>\r\n      <p className=\"text-lg text-gray-700 dark:text-gray-300 text-center mb-4\">\r\n        <span className=\"font-semibold text-gray-900 dark:text-white\">\r\n          {outperformingCount}\r\n        </span>{\" \"}\r\n        out of\r\n        <span className=\"font-semibold text-gray-900 dark:text-white\">\r\n          {\" \"}\r\n          {totalAltcoins}{\" \"}\r\n        </span>\r\n        altcoins have outperformed Bitcoin in the last 24 hours.\r\n      </p>\r\n\r\n      {requestError && (\r\n        <motion.div\r\n          className=\"text-red-500 text-center\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n        >\r\n          Too many requests, please wait a bit.\r\n        </motion.div>\r\n      )}\r\n\r\n      {outperformingCoins.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-4 text-center\">\r\n            Coins outperforming Bitcoin:\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            {outperformingCoins.map((coin, index) => (\r\n              <motion.div\r\n                key={index}\r\n                className=\"flex items-center justify-between p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md hover:scale-105 transition-transform\"\r\n                onClick={() => fetchCoinGraph(coin.id)}\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <img\r\n                    src={coin.image}\r\n                    alt={coin.name}\r\n                    className=\"w-8 h-8 rounded-full\"\r\n                  />\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {coin.name}\r\n                  </span>\r\n                </div>\r\n                <span\r\n                  className={`font-medium ${\r\n                    coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"\r\n                  }`}\r\n                >\r\n                  {coin.priceChange > 0 ? \"+\" : \"\"}\r\n                  {coin.priceChange.toFixed(2)}%\r\n                </span>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {selectedCoin && selectedCoin.data && (\r\n        <div className=\"mt-6\">\r\n          <h4 className=\"text-lg font-semibold text-gray-800 dark:text-white mb-4\">\r\n            {selectedCoin.id} - 7 Day Graph\r\n          </h4>\r\n          {/* Your graph component here */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}