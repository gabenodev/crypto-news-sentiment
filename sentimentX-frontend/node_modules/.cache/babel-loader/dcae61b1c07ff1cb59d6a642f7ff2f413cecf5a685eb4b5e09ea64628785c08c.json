{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltcoinSeason = () => {\n  _s();\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Aici vei apela un API pentru datele despre crypto (ex. CoinGecko, CoinMarketCap)\n    // Vom simula un răspuns pentru exemplu\n    const fetchAltcoinSeason = async () => {\n      try {\n        setLoading(true);\n        // Exemplar API - înlocuiește cu unul real sau folosește date statice pentru test\n        const response = await fetch(\"https://api.coingecko.com/api/v3/global\");\n        const data = await response.json();\n        const bitcoinDominance = data.data.market_cap_percentage.btc;\n\n        // Definim altcoin season când BTC dominance este sub 50%\n        if (bitcoinDominance < 50) {\n          setIsAltcoinSeason(true);\n        } else {\n          setIsAltcoinSeason(false);\n        }\n      } catch (error) {\n        console.error(\"Error fetching altcoin season data:\", error);\n        setIsAltcoinSeason(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAltcoinSeason();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `p-4 rounded-lg ${isAltcoinSeason ? \"bg-green-200\" : \"bg-red-200\"} text-center`,\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold\",\n      children: isAltcoinSeason ? \"It's Altcoin Season!\" : \"It's not Altcoin Season.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"+aUhO7xsNGo2ifHMLWFql/HuDN0=\");\n_c = AltcoinSeason;\nexport default AltcoinSeason;\nvar _c;\n$RefreshReg$(_c, \"AltcoinSeason\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AltcoinSeason","_s","isAltcoinSeason","setIsAltcoinSeason","loading","setLoading","fetchAltcoinSeason","response","fetch","data","json","bitcoinDominance","market_cap_percentage","btc","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst AltcoinSeason = () => {\r\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Aici vei apela un API pentru datele despre crypto (ex. CoinGecko, CoinMarketCap)\r\n    // Vom simula un răspuns pentru exemplu\r\n    const fetchAltcoinSeason = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Exemplar API - înlocuiește cu unul real sau folosește date statice pentru test\r\n        const response = await fetch(\"https://api.coingecko.com/api/v3/global\");\r\n        const data = await response.json();\r\n        const bitcoinDominance = data.data.market_cap_percentage.btc;\r\n\r\n        // Definim altcoin season când BTC dominance este sub 50%\r\n        if (bitcoinDominance < 50) {\r\n          setIsAltcoinSeason(true);\r\n        } else {\r\n          setIsAltcoinSeason(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching altcoin season data:\", error);\r\n        setIsAltcoinSeason(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAltcoinSeason();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`p-4 rounded-lg ${\r\n        isAltcoinSeason ? \"bg-green-200\" : \"bg-red-200\"\r\n      } text-center`}\r\n    >\r\n      <h2 className=\"text-xl font-semibold\">\r\n        {isAltcoinSeason ? \"It's Altcoin Season!\" : \"It's not Altcoin Season.\"}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFD,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;QACvE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,MAAMC,gBAAgB,GAAGF,IAAI,CAACA,IAAI,CAACG,qBAAqB,CAACC,GAAG;;QAE5D;QACA,IAAIF,gBAAgB,GAAG,EAAE,EAAE;UACzBR,kBAAkB,CAAC,IAAI,CAAC;QAC1B,CAAC,MAAM;UACLA,kBAAkB,CAAC,KAAK,CAAC;QAC3B;MACF,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC3DX,kBAAkB,CAAC,KAAK,CAAC;MAC3B,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACErB,OAAA;IACEsB,SAAS,EAAE,kBACTnB,eAAe,GAAG,cAAc,GAAG,YAAY,cAClC;IAAAc,QAAA,eAEfjB,OAAA;MAAIsB,SAAS,EAAC,uBAAuB;MAAAL,QAAA,EAClCd,eAAe,GAAG,sBAAsB,GAAG;IAA0B;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/CID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAiDnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}