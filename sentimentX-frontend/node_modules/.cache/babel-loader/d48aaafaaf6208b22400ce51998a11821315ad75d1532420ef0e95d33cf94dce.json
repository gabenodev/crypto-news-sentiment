{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\EthScan.js\";\nimport { FaEthereum, FaBitcoin } from \"react-icons/fa\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst whaleWallets = {\n  // Adrese Ethereum\n  \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\": \"Binance\",\n  \"0x5a52E96BAcdaBb82fd05763E25335261B270Efcb\": \"Binance 2\",\n  \"0x28C6c06298d514Db089934071355E5743bf21d60\": \"Binance 3\",\n  \"0x21a31Ee1afC51d94C2eFcCAa2092aD1028285549\": \"Binance 4\",\n  \"0x56Eddb7aa87536c09CCc2793473599fD21A8b17F\": \"Bitfinex\",\n  \"0x77134cbc06cb00b66f4c7e623d5fdbf6777635ec\": \"Bitfinex 2\",\n  \"0x6cC5F688a315f3dC28A7781717a9A798a59fDA7b\": \"OKX\",\n  \"0xE92d1A43df510F82C66382592a047d288f85226f\": \"OKX 2\",\n  \"0xA7EFae728D2936e78BDA97dc267687568dD593f3\": \"OKX 3\",\n  \"0x2faf487A4414Fe77e2327F0bf4AE2a264a776AD2\": \"FTX\",\n  \"0xC098B2a3Aa256D2140208C3de6543aAEf5cd3A94\": \"FTX 2\",\n  \"0x1b3cb81e51011b549d78bf720b0d924ac763a7c2\": \"Bybit\",\n  \"0x1b5b4e441f16a93837710f6405359c1b1a67715d\": \"Bybit 2\",\n  \"0x7155d7a4e4a8a0e9a793bfb3f2b2c0b1026a78b9\": \"Bybit 3\",\n  \"0xee5b5b923ffce93a870b3104b7ca09c3db80047a\": \"Bybit 4\",\n  \"0xf89d7b9c864f589bbF53a82105107622B35EaA40\": \"Bybit 5\",\n  \"0x3f5CE5FBFe3E9af3971dD833D26bA9b5C936f0bE\": \"Binance 5\",\n  \"0x34ea4138580435b5a521e460035edb19df1938c1\": \"Kraken\",\n  \"0x53d284357ec70ce289d6d64134dfac8e511c8a3d\": \"Kraken 2\",\n  \"0x6c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e\": \"Crypto.com\",\n  \"0x6262998ced04146fa42253a5c0af90ca02dfd2a3\": \"Crypto.com 2\",\n  \"0x46340b20830761efd32832a74d7169b29feb9758\": \"Huobi\",\n  \"0x5c985e89dde482efe97ea9f1950ad149eb73829b\": \"Huobi 2\",\n  \"0xdc76cd25977e0a5ae17155770273ad58648900d3\": \"KuCoin\",\n  \"0x2b5634c42055806a59e9107ed44d43c426e58258\": \"KuCoin 2\"\n  // Adaugă mai multe adrese aici\n};\nexport const fetchWhaleTransactions = async (page, filterValue) => {\n  const API_KEY_ETH = \"RP1AAGBP2YNUWFTAFP6KWT7GRRKC5BG5MM\"; // Înlocuiește cu cheia ta Etherscan\n  // const API_KEY_BSC = \"P51M4PQJ9KBGFGNXJFUETUJ2HSNJ98Y26T\"; // Înlocuiește cu cheia ta BscScan\n\n  const wallets = [{\n    name: \"Binance\",\n    address: \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Binance 2\",\n    address: \"0x5a52E96BAcdaBb82fd05763E25335261B270Efcb\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Binance 3\",\n    address: \"0x28C6c06298d514Db089934071355E5743bf21d60\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Bitfinex\",\n    address: \"0x56Eddb7aa87536c09CCc2793473599fD21A8b17F\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Bitfinex 2\",\n    address: \"0x77134cbc06cb00b66f4c7e623d5fdbf6777635ec\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"OKX\",\n    address: \"0x6cC5F688a315f3dC28A7781717a9A798a59fDA7b\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"OKX 2\",\n    address: \"0xE92d1A43df510F82C66382592a047d288f85226f\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"OKX 3\",\n    address: \"0xA7EFae728D2936e78BDA97dc267687568dD593f3\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"FTX\",\n    address: \"0x2faf487A4414Fe77e2327F0bf4AE2a264a776AD2\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"FTX 2\",\n    address: \"0xC098B2a3Aa256D2140208C3de6543aAEf5cd3A94\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Bybit\",\n    address: \"0x1b3cb81e51011b549d78bf720b0d924ac763a7c2\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Bybit 2\",\n    address: \"0x1b5b4e441f16a93837710f6405359c1b1a67715d\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Bybit 3\",\n    address: \"0x7155d7a4e4a8a0e9a793bfb3f2b2c0b1026a78b9\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Bybit 4\",\n    address: \"0xee5b5b923ffce93a870b3104b7ca09c3db80047a\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Bybit 5\",\n    address: \"0xf89d7b9c864f589bbF53a82105107622B35EaA40\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Binance 5\",\n    address: \"0x3f5CE5FBFe3E9af3971dD833D26bA9b5C936f0bE\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Kraken\",\n    address: \"0x34ea4138580435b5a521e460035edb19df1938c1\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Kraken 2\",\n    address: \"0x53d284357ec70ce289d6d64134dfac8e511c8a3d\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Crypto.com\",\n    address: \"0x6c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Crypto.com 2\",\n    address: \"0x6262998ced04146fa42253a5c0af90ca02dfd2a3\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Huobi\",\n    address: \"0x46340b20830761efd32832a74d7169b29feb9758\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"Huobi 2\",\n    address: \"0x5c985e89dde482efe97ea9f1950ad149eb73829b\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"KuCoin\",\n    address: \"0xdc76cd25977e0a5ae17155770273ad58648900d3\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }, {\n    name: \"KuCoin 2\",\n    address: \"0x2b5634c42055806a59e9107ed44d43c426e58258\",\n    blockchain: \"ETH\",\n    apiKey: API_KEY_ETH\n  }\n  // Adaugă mai multe wallet-uri aici\n  ];\n  const allTransactions = [];\n  for (let wallet of wallets) {\n    const {\n      address,\n      blockchain,\n      apiKey,\n      name\n    } = wallet;\n    const url = blockchain === \"ETH\" ? `https://api.etherscan.io/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=${page}&offset=100&sort=desc&apikey=${apiKey}` : `https://api.bscscan.com/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=${page}&offset=100&sort=desc&apikey=${apiKey}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      if (data.status === \"1\") {\n        // Filtrează tranzacțiile (converteste hexazecimal în număr)\n        const filteredTransactions = data.result.filter(tx => parseFloat(tx.value) > 10 ** 18 * filterValue // Filtrează tranzacții mai mari de filterValue ETH\n        );\n        const transactionsWithData = filteredTransactions.map(tx => {\n          let exchange = \"Unknown\";\n\n          // Normalizează adresele pentru comparație (converteste la litere mici)\n          const fromAddress = tx.from.toLowerCase();\n          const toAddress = tx.to.toLowerCase();\n\n          // Verificăm 'from' și 'to' pentru a atribui exchange-ul\n          console.log(`Checking addresses: From ${fromAddress} -> To ${toAddress}`);\n          console.log(\"whaleWallets[fromAddress]:\", whaleWallets[fromAddress]);\n          console.log(\"whaleWallets[toAddress]:\", whaleWallets[toAddress]);\n          if (whaleWallets[fromAddress]) {\n            exchange = whaleWallets[fromAddress];\n          } else if (whaleWallets[toAddress]) {\n            exchange = whaleWallets[toAddress];\n          }\n          return {\n            hash: tx.hash,\n            from: tx.from,\n            to: tx.to,\n            value: tx.value / 10 ** 18,\n            blockchain,\n            exchange,\n            date: new Date(tx.timeStamp * 1000).toLocaleString(),\n            fee: tx.gasUsed ? tx.gasUsed * tx.gasPrice / 10 ** 18 : \"N/A\",\n            block: tx.blockNumber,\n            age: formatDistanceToNow(new Date(tx.timeStamp * 1000)),\n            icon: blockchain === \"ETH\" ? /*#__PURE__*/_jsxDEV(FaEthereum, {\n              className: \"text-cyan-400 text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(FaBitcoin, {\n              className: \"text-yellow-400 text-xl\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this),\n            timeStamp: tx.timeStamp // Adăugăm timeStamp pentru sortare\n          };\n        });\n        allTransactions.push(...transactionsWithData);\n      } else {\n        console.error(`No transactions found for wallet: ${name}`);\n      }\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n    }\n  }\n\n  // Sortează tranzacțiile după dată (timeStamp)\n  allTransactions.sort((a, b) => b.timeStamp - a.timeStamp);\n\n  // Calculează numărul total de pagini\n  const totalFilteredTransactions = allTransactions.length;\n  const totalPages = Math.ceil(totalFilteredTransactions / 10);\n\n  // Limitează tranzacțiile la 10 pe pagină\n  const startIndex = (page - 1) * 10;\n  const endIndex = startIndex + 10;\n  const paginatedTransactions = allTransactions.slice(startIndex, endIndex);\n  return {\n    transactions: paginatedTransactions,\n    totalPages\n  };\n};","map":{"version":3,"names":["FaEthereum","FaBitcoin","formatDistanceToNow","jsxDEV","_jsxDEV","whaleWallets","fetchWhaleTransactions","page","filterValue","API_KEY_ETH","wallets","name","address","blockchain","apiKey","allTransactions","wallet","url","response","fetch","data","json","console","log","status","filteredTransactions","result","filter","tx","parseFloat","value","transactionsWithData","map","exchange","fromAddress","from","toLowerCase","toAddress","to","hash","date","Date","timeStamp","toLocaleString","fee","gasUsed","gasPrice","block","blockNumber","age","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","push","error","sort","a","b","totalFilteredTransactions","length","totalPages","Math","ceil","startIndex","endIndex","paginatedTransactions","slice","transactions"],"sources":["D:/React App/crypto-news-sentiment/src/components/EthScan.js"],"sourcesContent":["import { FaEthereum, FaBitcoin } from \"react-icons/fa\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\nconst whaleWallets = {\r\n  // Adrese Ethereum\r\n  \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\": \"Binance\",\r\n  \"0x5a52E96BAcdaBb82fd05763E25335261B270Efcb\": \"Binance 2\",\r\n  \"0x28C6c06298d514Db089934071355E5743bf21d60\": \"Binance 3\",\r\n  \"0x21a31Ee1afC51d94C2eFcCAa2092aD1028285549\": \"Binance 4\",\r\n  \"0x56Eddb7aa87536c09CCc2793473599fD21A8b17F\": \"Bitfinex\",\r\n  \"0x77134cbc06cb00b66f4c7e623d5fdbf6777635ec\": \"Bitfinex 2\",\r\n  \"0x6cC5F688a315f3dC28A7781717a9A798a59fDA7b\": \"OKX\",\r\n  \"0xE92d1A43df510F82C66382592a047d288f85226f\": \"OKX 2\",\r\n  \"0xA7EFae728D2936e78BDA97dc267687568dD593f3\": \"OKX 3\",\r\n  \"0x2faf487A4414Fe77e2327F0bf4AE2a264a776AD2\": \"FTX\",\r\n  \"0xC098B2a3Aa256D2140208C3de6543aAEf5cd3A94\": \"FTX 2\",\r\n  \"0x1b3cb81e51011b549d78bf720b0d924ac763a7c2\": \"Bybit\",\r\n  \"0x1b5b4e441f16a93837710f6405359c1b1a67715d\": \"Bybit 2\",\r\n  \"0x7155d7a4e4a8a0e9a793bfb3f2b2c0b1026a78b9\": \"Bybit 3\",\r\n  \"0xee5b5b923ffce93a870b3104b7ca09c3db80047a\": \"Bybit 4\",\r\n  \"0xf89d7b9c864f589bbF53a82105107622B35EaA40\": \"Bybit 5\",\r\n  \"0x3f5CE5FBFe3E9af3971dD833D26bA9b5C936f0bE\": \"Binance 5\",\r\n  \"0x34ea4138580435b5a521e460035edb19df1938c1\": \"Kraken\",\r\n  \"0x53d284357ec70ce289d6d64134dfac8e511c8a3d\": \"Kraken 2\",\r\n  \"0x6c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e\": \"Crypto.com\",\r\n  \"0x6262998ced04146fa42253a5c0af90ca02dfd2a3\": \"Crypto.com 2\",\r\n  \"0x46340b20830761efd32832a74d7169b29feb9758\": \"Huobi\",\r\n  \"0x5c985e89dde482efe97ea9f1950ad149eb73829b\": \"Huobi 2\",\r\n  \"0xdc76cd25977e0a5ae17155770273ad58648900d3\": \"KuCoin\",\r\n  \"0x2b5634c42055806a59e9107ed44d43c426e58258\": \"KuCoin 2\",\r\n  // Adaugă mai multe adrese aici\r\n};\r\n\r\nexport const fetchWhaleTransactions = async (page, filterValue) => {\r\n  const API_KEY_ETH = \"RP1AAGBP2YNUWFTAFP6KWT7GRRKC5BG5MM\"; // Înlocuiește cu cheia ta Etherscan\r\n  // const API_KEY_BSC = \"P51M4PQJ9KBGFGNXJFUETUJ2HSNJ98Y26T\"; // Înlocuiește cu cheia ta BscScan\r\n\r\n  const wallets = [\r\n    {\r\n      name: \"Binance\",\r\n      address: \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Binance 2\",\r\n      address: \"0x5a52E96BAcdaBb82fd05763E25335261B270Efcb\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Binance 3\",\r\n      address: \"0x28C6c06298d514Db089934071355E5743bf21d60\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Bitfinex\",\r\n      address: \"0x56Eddb7aa87536c09CCc2793473599fD21A8b17F\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Bitfinex 2\",\r\n      address: \"0x77134cbc06cb00b66f4c7e623d5fdbf6777635ec\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"OKX\",\r\n      address: \"0x6cC5F688a315f3dC28A7781717a9A798a59fDA7b\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"OKX 2\",\r\n      address: \"0xE92d1A43df510F82C66382592a047d288f85226f\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"OKX 3\",\r\n      address: \"0xA7EFae728D2936e78BDA97dc267687568dD593f3\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"FTX\",\r\n      address: \"0x2faf487A4414Fe77e2327F0bf4AE2a264a776AD2\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"FTX 2\",\r\n      address: \"0xC098B2a3Aa256D2140208C3de6543aAEf5cd3A94\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Bybit\",\r\n      address: \"0x1b3cb81e51011b549d78bf720b0d924ac763a7c2\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Bybit 2\",\r\n      address: \"0x1b5b4e441f16a93837710f6405359c1b1a67715d\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Bybit 3\",\r\n      address: \"0x7155d7a4e4a8a0e9a793bfb3f2b2c0b1026a78b9\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Bybit 4\",\r\n      address: \"0xee5b5b923ffce93a870b3104b7ca09c3db80047a\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Bybit 5\",\r\n      address: \"0xf89d7b9c864f589bbF53a82105107622B35EaA40\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Binance 5\",\r\n      address: \"0x3f5CE5FBFe3E9af3971dD833D26bA9b5C936f0bE\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Kraken\",\r\n      address: \"0x34ea4138580435b5a521e460035edb19df1938c1\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Kraken 2\",\r\n      address: \"0x53d284357ec70ce289d6d64134dfac8e511c8a3d\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Crypto.com\",\r\n      address: \"0x6c8c6b02e7b2be14d4fa6022dfd6d75921d90e4e\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Crypto.com 2\",\r\n      address: \"0x6262998ced04146fa42253a5c0af90ca02dfd2a3\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Huobi\",\r\n      address: \"0x46340b20830761efd32832a74d7169b29feb9758\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"Huobi 2\",\r\n      address: \"0x5c985e89dde482efe97ea9f1950ad149eb73829b\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"KuCoin\",\r\n      address: \"0xdc76cd25977e0a5ae17155770273ad58648900d3\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    {\r\n      name: \"KuCoin 2\",\r\n      address: \"0x2b5634c42055806a59e9107ed44d43c426e58258\",\r\n      blockchain: \"ETH\",\r\n      apiKey: API_KEY_ETH,\r\n    },\r\n    // Adaugă mai multe wallet-uri aici\r\n  ];\r\n\r\n  const allTransactions = [];\r\n\r\n  for (let wallet of wallets) {\r\n    const { address, blockchain, apiKey, name } = wallet;\r\n    const url =\r\n      blockchain === \"ETH\"\r\n        ? `https://api.etherscan.io/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=${page}&offset=100&sort=desc&apikey=${apiKey}`\r\n        : `https://api.bscscan.com/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=${page}&offset=100&sort=desc&apikey=${apiKey}`;\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      console.log(data);\r\n\r\n      if (data.status === \"1\") {\r\n        // Filtrează tranzacțiile (converteste hexazecimal în număr)\r\n        const filteredTransactions = data.result.filter(\r\n          (tx) => parseFloat(tx.value) > 10 ** 18 * filterValue // Filtrează tranzacții mai mari de filterValue ETH\r\n        );\r\n\r\n        const transactionsWithData = filteredTransactions.map((tx) => {\r\n          let exchange = \"Unknown\";\r\n\r\n          // Normalizează adresele pentru comparație (converteste la litere mici)\r\n          const fromAddress = tx.from.toLowerCase();\r\n          const toAddress = tx.to.toLowerCase();\r\n\r\n          // Verificăm 'from' și 'to' pentru a atribui exchange-ul\r\n          console.log(\r\n            `Checking addresses: From ${fromAddress} -> To ${toAddress}`\r\n          );\r\n          console.log(\"whaleWallets[fromAddress]:\", whaleWallets[fromAddress]);\r\n          console.log(\"whaleWallets[toAddress]:\", whaleWallets[toAddress]);\r\n          if (whaleWallets[fromAddress]) {\r\n            exchange = whaleWallets[fromAddress];\r\n          } else if (whaleWallets[toAddress]) {\r\n            exchange = whaleWallets[toAddress];\r\n          }\r\n\r\n          return {\r\n            hash: tx.hash,\r\n            from: tx.from,\r\n            to: tx.to,\r\n            value: tx.value / 10 ** 18,\r\n            blockchain,\r\n            exchange,\r\n            date: new Date(tx.timeStamp * 1000).toLocaleString(),\r\n            fee: tx.gasUsed ? (tx.gasUsed * tx.gasPrice) / 10 ** 18 : \"N/A\",\r\n            block: tx.blockNumber,\r\n            age: formatDistanceToNow(new Date(tx.timeStamp * 1000)),\r\n            icon:\r\n              blockchain === \"ETH\" ? (\r\n                <FaEthereum className=\"text-cyan-400 text-xl\" />\r\n              ) : (\r\n                <FaBitcoin className=\"text-yellow-400 text-xl\" />\r\n              ),\r\n            timeStamp: tx.timeStamp, // Adăugăm timeStamp pentru sortare\r\n          };\r\n        });\r\n\r\n        allTransactions.push(...transactionsWithData);\r\n      } else {\r\n        console.error(`No transactions found for wallet: ${name}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching transactions:\", error);\r\n    }\r\n  }\r\n\r\n  // Sortează tranzacțiile după dată (timeStamp)\r\n  allTransactions.sort((a, b) => b.timeStamp - a.timeStamp);\r\n\r\n  // Calculează numărul total de pagini\r\n  const totalFilteredTransactions = allTransactions.length;\r\n  const totalPages = Math.ceil(totalFilteredTransactions / 10);\r\n\r\n  // Limitează tranzacțiile la 10 pe pagină\r\n  const startIndex = (page - 1) * 10;\r\n  const endIndex = startIndex + 10;\r\n  const paginatedTransactions = allTransactions.slice(startIndex, endIndex);\r\n\r\n  return { transactions: paginatedTransactions, totalPages };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}