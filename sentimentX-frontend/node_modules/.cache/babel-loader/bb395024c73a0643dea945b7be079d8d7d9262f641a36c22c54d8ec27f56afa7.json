{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\WhaleTransactions.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { FaEthereum, FaBitcoin } from \"react-icons/fa\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst whaleWallets = {\n  \"0x8894E0a0c962CB723c1976a4421c95949bE2D4E3\": \"Binance\",\n  \"0xBE0eB53F46cd790Cd13851d5EFf43D12404d33E8\": \"Binance 2\",\n  \"0x5a52E96BAcdaBb82fd05763E25335261B270Efcb\": \"Binance 3\"\n  // Adaugă mai multe adrese aici\n};\nconst WhaleTransactions = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1); // Pagina curentă\n  const offset = 20; // Numărul de tranzacții pe pagină\n\n  const fetchWhaleTransactions = async page => {\n    const API_KEY_BSC = \"P51M4PQJ9KBGFGNXJFUETUJ2HSNJ98Y26T\"; // Înlocuiește cu cheia ta BscScan\n\n    const wallets = [{\n      name: \"Binance BSC\",\n      address: \"0x8894E0a0c962CB723c1976a4421c95949bE2D4E3\",\n      // Adresă BSC de exemplu\n      blockchain: \"BSC\",\n      apiKey: API_KEY_BSC\n    }];\n    const allTransactions = [];\n    for (let wallet of wallets) {\n      const {\n        address,\n        blockchain,\n        apiKey,\n        name\n      } = wallet;\n      const url = `https://api.bscscan.com/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=${page}&offset=${offset}&sort=desc&apikey=${apiKey}`;\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(\"API Response:\", data);\n        console.log(\"Total Transactions:\", data.result.length);\n        if (data.status === \"1\" && data.result) {\n          const filteredTransactions = data.result.filter(tx => parseInt(tx.value, 16) > 10 ** 18 * 100);\n          console.log(\"Filtered Transactions:\", filteredTransactions);\n          const transactionsWithData = filteredTransactions.map(tx => {\n            console.log(\"Processing Transaction:\", tx);\n            let exchange = \"Unknown\";\n            if (whaleWallets[tx.from]) {\n              exchange = whaleWallets[tx.from];\n            } else if (whaleWallets[tx.to]) {\n              exchange = whaleWallets[tx.to];\n            } else {\n              exchange = truncate(tx.from); // Adresa trunchiată dacă nu este găsită\n            }\n            return {\n              hash: tx.hash,\n              from: tx.from,\n              to: tx.to,\n              value: parseInt(tx.value, 16) / 10 ** 18,\n              blockchain: \"BSC\",\n              exchange,\n              date: new Date(tx.timeStamp * 1000).toLocaleString(),\n              fee: tx.gasUsed ? parseInt(tx.gasUsed, 16) * parseInt(tx.gasPrice, 16) / 10 ** 18 : \"N/A\",\n              block: tx.blockNumber,\n              age: formatDistanceToNow(new Date(tx.timeStamp * 1000)),\n              icon: /*#__PURE__*/_jsxDEV(FaBitcoin, {\n                className: \"text-yellow-400 text-xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            };\n          });\n          allTransactions.push(...transactionsWithData);\n        } else {\n          console.error(`No transactions found for wallet: ${name}`);\n        }\n      } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n      }\n    }\n    console.log(\"All Transactions:\", allTransactions);\n    setTransactions(allTransactions);\n    setLoading(false);\n  };\n  useEffect(() => {\n    fetchWhaleTransactions(page);\n  }, [page]);\n  const truncate = str => {\n    return str.length > 15 ? `${str.slice(0, 6)}...${str.slice(-4)}` : str;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-8 space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(1),\n        disabled: page === 1,\n        className: \"px-4 py-2 bg-indigo-500 text-white rounded-lg disabled:bg-gray-300\",\n        children: \"First Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prev => Math.max(prev - 1, 1)),\n        disabled: page === 1,\n        className: \"px-4 py-2 bg-indigo-500 text-white rounded-lg disabled:bg-gray-300\",\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"px-4 py-2 bg-gray-100 rounded-lg\",\n        children: [\"Page \", page]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prev => prev + 1),\n        className: \"px-4 py-2 bg-indigo-500 text-white rounded-lg\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(WhaleTransactions, \"t1fIOOFhMO1ndF3uEzs769oqwUk=\");\n_c = WhaleTransactions;\nexport default WhaleTransactions;\nvar _c;\n$RefreshReg$(_c, \"WhaleTransactions\");","map":{"version":3,"names":["useState","useEffect","FaEthereum","FaBitcoin","formatDistanceToNow","jsxDEV","_jsxDEV","whaleWallets","WhaleTransactions","_s","transactions","setTransactions","loading","setLoading","page","setPage","offset","fetchWhaleTransactions","API_KEY_BSC","wallets","name","address","blockchain","apiKey","allTransactions","wallet","url","response","fetch","data","json","console","log","result","length","status","filteredTransactions","filter","tx","parseInt","value","transactionsWithData","map","exchange","from","to","truncate","hash","date","Date","timeStamp","toLocaleString","fee","gasUsed","gasPrice","block","blockNumber","age","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","push","error","str","slice","children","onClick","disabled","prev","Math","max","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/WhaleTransactions.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { FaEthereum, FaBitcoin } from \"react-icons/fa\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\nconst whaleWallets = {\r\n  \"0x8894E0a0c962CB723c1976a4421c95949bE2D4E3\": \"Binance\",\r\n  \"0xBE0eB53F46cd790Cd13851d5EFf43D12404d33E8\": \"Binance 2\",\r\n  \"0x5a52E96BAcdaBb82fd05763E25335261B270Efcb\": \"Binance 3\",\r\n  // Adaugă mai multe adrese aici\r\n};\r\n\r\nconst WhaleTransactions = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [page, setPage] = useState(1); // Pagina curentă\r\n  const offset = 20; // Numărul de tranzacții pe pagină\r\n\r\n  const fetchWhaleTransactions = async (page) => {\r\n    const API_KEY_BSC = \"P51M4PQJ9KBGFGNXJFUETUJ2HSNJ98Y26T\"; // Înlocuiește cu cheia ta BscScan\r\n\r\n    const wallets = [\r\n      {\r\n        name: \"Binance BSC\",\r\n        address: \"0x8894E0a0c962CB723c1976a4421c95949bE2D4E3\", // Adresă BSC de exemplu\r\n        blockchain: \"BSC\",\r\n        apiKey: API_KEY_BSC,\r\n      },\r\n    ];\r\n\r\n    const allTransactions = [];\r\n\r\n    for (let wallet of wallets) {\r\n      const { address, blockchain, apiKey, name } = wallet;\r\n      const url = `https://api.bscscan.com/api?module=account&action=txlist&address=${address}&startblock=0&endblock=99999999&page=${page}&offset=${offset}&sort=desc&apikey=${apiKey}`;\r\n\r\n      try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(\"API Response:\", data);\r\n        console.log(\"Total Transactions:\", data.result.length);\r\n\r\n        if (data.status === \"1\" && data.result) {\r\n          const filteredTransactions = data.result.filter(\r\n            (tx) => parseInt(tx.value, 16) > 10 ** 18 * 100\r\n          );\r\n          console.log(\"Filtered Transactions:\", filteredTransactions);\r\n\r\n          const transactionsWithData = filteredTransactions.map((tx) => {\r\n            console.log(\"Processing Transaction:\", tx);\r\n\r\n            let exchange = \"Unknown\";\r\n            if (whaleWallets[tx.from]) {\r\n              exchange = whaleWallets[tx.from];\r\n            } else if (whaleWallets[tx.to]) {\r\n              exchange = whaleWallets[tx.to];\r\n            } else {\r\n              exchange = truncate(tx.from); // Adresa trunchiată dacă nu este găsită\r\n            }\r\n\r\n            return {\r\n              hash: tx.hash,\r\n              from: tx.from,\r\n              to: tx.to,\r\n              value: parseInt(tx.value, 16) / 10 ** 18,\r\n              blockchain: \"BSC\",\r\n              exchange,\r\n              date: new Date(tx.timeStamp * 1000).toLocaleString(),\r\n              fee: tx.gasUsed\r\n                ? (parseInt(tx.gasUsed, 16) * parseInt(tx.gasPrice, 16)) /\r\n                  10 ** 18\r\n                : \"N/A\",\r\n              block: tx.blockNumber,\r\n              age: formatDistanceToNow(new Date(tx.timeStamp * 1000)),\r\n              icon: <FaBitcoin className=\"text-yellow-400 text-xl\" />,\r\n            };\r\n          });\r\n\r\n          allTransactions.push(...transactionsWithData);\r\n        } else {\r\n          console.error(`No transactions found for wallet: ${name}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching transactions:\", error);\r\n      }\r\n    }\r\n\r\n    console.log(\"All Transactions:\", allTransactions);\r\n    setTransactions(allTransactions);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchWhaleTransactions(page);\r\n  }, [page]);\r\n\r\n  const truncate = (str) => {\r\n    return str.length > 15 ? `${str.slice(0, 6)}...${str.slice(-4)}` : str;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      {/* ... (restul codului tău) */}\r\n      {/* Butoane de paginare */}\r\n      <div className=\"flex justify-center mt-8 space-x-4\">\r\n        <button\r\n          onClick={() => setPage(1)}\r\n          disabled={page === 1}\r\n          className=\"px-4 py-2 bg-indigo-500 text-white rounded-lg disabled:bg-gray-300\"\r\n        >\r\n          First Page\r\n        </button>\r\n        <button\r\n          onClick={() => setPage((prev) => Math.max(prev - 1, 1))}\r\n          disabled={page === 1}\r\n          className=\"px-4 py-2 bg-indigo-500 text-white rounded-lg disabled:bg-gray-300\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <span className=\"px-4 py-2 bg-gray-100 rounded-lg\">Page {page}</span>\r\n        <button\r\n          onClick={() => setPage((prev) => prev + 1)}\r\n          className=\"px-4 py-2 bg-indigo-500 text-white rounded-lg\"\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n      {/* ... (restul codului tău) */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhaleTransactions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}