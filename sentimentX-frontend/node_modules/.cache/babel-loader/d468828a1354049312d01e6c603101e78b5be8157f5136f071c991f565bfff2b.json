{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\nimport AltcoinChart from \"./AltcoinChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltcoinSeason = () => {\n  _s();\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [outperformingCount, setOutperformingCount] = useState(0);\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\n  const [selectedCoin, setSelectedCoin] = useState(null);\n  const [lastRequestTime, setLastRequestTime] = useState(null); // Timpul ultimei cereri\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Mesaj de eroare\n\n  useEffect(() => {\n    const fetchAltcoinSeasonData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\");\n        const data = await response.json();\n        const excludedCoins = [\"tether\", \"usd-coin\", \"wrapped-bitcoin\", \"staked-ether\", \"binance-usd\", \"dai\", \"trueusd\", \"wrapped-steth\", \"weth\", \"ethereum-classic\", \"coinbase-wrapped-btc\", \"wrapped-ethereum\", \"usds\", \"wrapped-eeth\", \"bitcoin-cash\", \"wrapped-ust\", \"susds\", \"ethena-usde\", \"first-digital-usd\", \"paypal-usd\", \"usual-usd\", \"binance-staked-sol\", \"solv-protocol-solvbtc-bbn\", \"lombard-staked-btc\", \"wrapped-avax\", \"solv-btc\", \"binance-peg-weth\", \"kelp-dao-restaked-eth\", \"mantle-staked-ether\", \"rocket-pool-eth\"];\n        const filteredData = data.filter(coin => !excludedCoins.includes(coin.id));\n        console.log(\"Filtered data:\", filteredData);\n        let outperformingCountTemp = 0;\n        const totalAltcoinsTemp = filteredData.length;\n        const outperformingCoinsTemp = [];\n        const bitcoin = data.find(coin => coin.id === \"bitcoin\");\n        if (!bitcoin) {\n          console.error(\"Bitcoin data not found\");\n          return;\n        }\n        for (let coin of filteredData) {\n          if (coin.price_change_percentage_24h > bitcoin.price_change_percentage_24h) {\n            outperformingCountTemp++;\n            outperformingCoinsTemp.push({\n              name: coin.name,\n              priceChange: coin.price_change_percentage_24h,\n              image: coin.image,\n              id: coin.id // AdaugÄƒ id-ul coin-ului\n            });\n          }\n        }\n        setOutperformingCount(outperformingCountTemp);\n        setTotalAltcoins(totalAltcoinsTemp);\n        setOutperformingCoins(outperformingCoinsTemp);\n        setPercentage(outperformingCountTemp / totalAltcoinsTemp * 100);\n        setIsAltcoinSeason(outperformingCountTemp / totalAltcoinsTemp * 100 >= 75);\n      } catch (error) {\n        console.error(\"Error fetching altcoin season data:\", error);\n        setIsAltcoinSeason(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAltcoinSeasonData();\n  }, []);\n  const handleCoinClick = coin => {\n    const currentTime = Date.now();\n    if (lastRequestTime && currentTime - lastRequestTime < 5000) {\n      // DacÄƒ nu au trecut 5 secunde\n      setErrorMessage(\"Too many requests. You must wait 5 seconds.\");\n      setTimeout(() => setErrorMessage(\"\"), 3000); // Ascunde mesajul dupÄƒ 3 secunde\n      return;\n    }\n\n    // ActualizeazÄƒ timpul ultimei cereri\n    setLastRequestTime(currentTime);\n    setSelectedCoin(coin);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-gray-700 text-lg\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 12\n  }, this);\n  const barColor = percentage >= 80 ? \"bg-green-600\" : percentage >= 60 ? \"bg-green-400\" : percentage >= 40 ? \"bg-yellow-400\" : percentage >= 20 ? \"bg-orange-400\" : \"bg-red-500\";\n  outperformingCoins.sort((a, b) => b.priceChange - a.priceChange);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\",\n      children: isAltcoinSeason ? \"It's Altcoin Season! ðŸš€\" : \"It's not Altcoin Season. ðŸ“‰\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full bg-gray-300 h-4 rounded-full mb-6 overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-4 rounded-full transition-all duration-500 ${barColor}`,\n        style: {\n          width: `${percentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-700 dark:text-gray-300 text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-gray-900 dark:text-white\",\n        children: outperformingCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), \" \", \"out of\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-gray-900 dark:text-white\",\n        children: [\" \", totalAltcoins, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), \"altcoins have outperformed Bitcoin in the last 24 hours.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 text-center mb-4\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), outperformingCoins.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 dark:text-white mb-4 text-center\",\n        children: \"Coins outperforming Bitcoin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n        children: outperformingCoins.map((coin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleCoinClick(coin),\n          className: \"flex items-center justify-between p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md hover:scale-105 transition-transform cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: coin.image,\n              alt: coin.name,\n              className: \"w-8 h-8 rounded-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-gray-900 dark:text-white\",\n              children: coin.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `font-medium ${coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"}`,\n            children: [coin.priceChange > 0 ? \"+\" : \"\", coin.priceChange.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: selectedCoin && /*#__PURE__*/_jsxDEV(AltcoinChart, {\n        coin: selectedCoin,\n        onClose: () => setSelectedCoin(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"M3/rebSJtKI5OxDXb+D3k7VyP00=\");\n_c = AltcoinSeason;\nexport default AltcoinSeason;\nvar _c;\n$RefreshReg$(_c, \"AltcoinSeason\");","map":{"version":3,"names":["React","useEffect","useState","AnimatePresence","AltcoinChart","jsxDEV","_jsxDEV","AltcoinSeason","_s","isAltcoinSeason","setIsAltcoinSeason","loading","setLoading","outperformingCount","setOutperformingCount","totalAltcoins","setTotalAltcoins","percentage","setPercentage","outperformingCoins","setOutperformingCoins","selectedCoin","setSelectedCoin","lastRequestTime","setLastRequestTime","errorMessage","setErrorMessage","fetchAltcoinSeasonData","response","fetch","data","json","excludedCoins","filteredData","filter","coin","includes","id","console","log","outperformingCountTemp","totalAltcoinsTemp","length","outperformingCoinsTemp","bitcoin","find","error","price_change_percentage_24h","push","name","priceChange","image","handleCoinClick","currentTime","Date","now","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","barColor","sort","a","b","style","width","map","index","onClick","src","alt","toFixed","onClose","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport AltcoinChart from \"./AltcoinChart\";\r\n\r\nconst AltcoinSeason = () => {\r\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [outperformingCount, setOutperformingCount] = useState(0);\r\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\r\n  const [selectedCoin, setSelectedCoin] = useState(null);\r\n  const [lastRequestTime, setLastRequestTime] = useState(null); // Timpul ultimei cereri\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Mesaj de eroare\r\n\r\n  useEffect(() => {\r\n    const fetchAltcoinSeasonData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const excludedCoins = [\r\n          \"tether\",\r\n          \"usd-coin\",\r\n          \"wrapped-bitcoin\",\r\n          \"staked-ether\",\r\n          \"binance-usd\",\r\n          \"dai\",\r\n          \"trueusd\",\r\n          \"wrapped-steth\",\r\n          \"weth\",\r\n          \"ethereum-classic\",\r\n          \"coinbase-wrapped-btc\",\r\n          \"wrapped-ethereum\",\r\n          \"usds\",\r\n          \"wrapped-eeth\",\r\n          \"bitcoin-cash\",\r\n          \"wrapped-ust\",\r\n          \"susds\",\r\n          \"ethena-usde\",\r\n          \"first-digital-usd\",\r\n          \"paypal-usd\",\r\n          \"usual-usd\",\r\n          \"binance-staked-sol\",\r\n          \"solv-protocol-solvbtc-bbn\",\r\n          \"lombard-staked-btc\",\r\n          \"wrapped-avax\",\r\n          \"solv-btc\",\r\n          \"binance-peg-weth\",\r\n          \"kelp-dao-restaked-eth\",\r\n          \"mantle-staked-ether\",\r\n          \"rocket-pool-eth\",\r\n        ];\r\n\r\n        const filteredData = data.filter(\r\n          (coin) => !excludedCoins.includes(coin.id)\r\n        );\r\n        console.log(\"Filtered data:\", filteredData);\r\n        let outperformingCountTemp = 0;\r\n        const totalAltcoinsTemp = filteredData.length;\r\n        const outperformingCoinsTemp = [];\r\n\r\n        const bitcoin = data.find((coin) => coin.id === \"bitcoin\");\r\n        if (!bitcoin) {\r\n          console.error(\"Bitcoin data not found\");\r\n          return;\r\n        }\r\n\r\n        for (let coin of filteredData) {\r\n          if (\r\n            coin.price_change_percentage_24h >\r\n            bitcoin.price_change_percentage_24h\r\n          ) {\r\n            outperformingCountTemp++;\r\n            outperformingCoinsTemp.push({\r\n              name: coin.name,\r\n              priceChange: coin.price_change_percentage_24h,\r\n              image: coin.image,\r\n              id: coin.id, // AdaugÄƒ id-ul coin-ului\r\n            });\r\n          }\r\n        }\r\n\r\n        setOutperformingCount(outperformingCountTemp);\r\n        setTotalAltcoins(totalAltcoinsTemp);\r\n        setOutperformingCoins(outperformingCoinsTemp);\r\n        setPercentage((outperformingCountTemp / totalAltcoinsTemp) * 100);\r\n        setIsAltcoinSeason(\r\n          (outperformingCountTemp / totalAltcoinsTemp) * 100 >= 75\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error fetching altcoin season data:\", error);\r\n        setIsAltcoinSeason(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAltcoinSeasonData();\r\n  }, []);\r\n\r\n  const handleCoinClick = (coin) => {\r\n    const currentTime = Date.now();\r\n    if (lastRequestTime && currentTime - lastRequestTime < 5000) {\r\n      // DacÄƒ nu au trecut 5 secunde\r\n      setErrorMessage(\"Too many requests. You must wait 5 seconds.\");\r\n      setTimeout(() => setErrorMessage(\"\"), 3000); // Ascunde mesajul dupÄƒ 3 secunde\r\n      return;\r\n    }\r\n\r\n    // ActualizeazÄƒ timpul ultimei cereri\r\n    setLastRequestTime(currentTime);\r\n    setSelectedCoin(coin);\r\n  };\r\n\r\n  if (loading)\r\n    return <div className=\"text-center text-gray-700 text-lg\">Loading...</div>;\r\n\r\n  const barColor =\r\n    percentage >= 80\r\n      ? \"bg-green-600\"\r\n      : percentage >= 60\r\n      ? \"bg-green-400\"\r\n      : percentage >= 40\r\n      ? \"bg-yellow-400\"\r\n      : percentage >= 20\r\n      ? \"bg-orange-400\"\r\n      : \"bg-red-500\";\r\n\r\n  outperformingCoins.sort((a, b) => b.priceChange - a.priceChange);\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\">\r\n        {isAltcoinSeason\r\n          ? \"It's Altcoin Season! ðŸš€\"\r\n          : \"It's not Altcoin Season. ðŸ“‰\"}\r\n      </h2>\r\n      <div className=\"relative w-full bg-gray-300 h-4 rounded-full mb-6 overflow-hidden\">\r\n        <div\r\n          className={`h-4 rounded-full transition-all duration-500 ${barColor}`}\r\n          style={{ width: `${percentage}%` }}\r\n        ></div>\r\n      </div>\r\n      <p className=\"text-lg text-gray-700 dark:text-gray-300 text-center mb-4\">\r\n        <span className=\"font-semibold text-gray-900 dark:text-white\">\r\n          {outperformingCount}\r\n        </span>{\" \"}\r\n        out of\r\n        <span className=\"font-semibold text-gray-900 dark:text-white\">\r\n          {\" \"}\r\n          {totalAltcoins}{\" \"}\r\n        </span>\r\n        altcoins have outperformed Bitcoin in the last 24 hours.\r\n      </p>\r\n      {errorMessage && (\r\n        <div className=\"text-red-500 text-center mb-4\">{errorMessage}</div>\r\n      )}\r\n      {outperformingCoins.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-4 text-center\">\r\n            Coins outperforming Bitcoin:\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            {outperformingCoins.map((coin, index) => (\r\n              <div\r\n                key={index}\r\n                onClick={() => handleCoinClick(coin)}\r\n                className=\"flex items-center justify-between p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md hover:scale-105 transition-transform cursor-pointer\"\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <img\r\n                    src={coin.image}\r\n                    alt={coin.name}\r\n                    className=\"w-8 h-8 rounded-full\"\r\n                  />\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {coin.name}\r\n                  </span>\r\n                </div>\r\n                <span\r\n                  className={`font-medium ${\r\n                    coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"\r\n                  }`}\r\n                >\r\n                  {coin.priceChange > 0 ? \"+\" : \"\"}\r\n                  {coin.priceChange.toFixed(2)}%\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <AnimatePresence>\r\n        {selectedCoin && (\r\n          <AltcoinChart\r\n            coin={selectedCoin}\r\n            onClose={() => setSelectedCoin(null)}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}