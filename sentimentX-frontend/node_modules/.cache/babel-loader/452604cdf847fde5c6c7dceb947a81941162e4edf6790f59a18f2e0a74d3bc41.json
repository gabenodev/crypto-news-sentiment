{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltcoinSeason = () => {\n  _s();\n  const [altcoinsOutperformingBTC, setAltcoinsOutperformingBTC] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Funcția pentru a verifica dacă 75% din altcoins au performat mai bine decât BTC pe o perioadă de 30 zile\n    const fetchAltcoinSeason = async () => {\n      try {\n        setLoading(true);\n        // Fetch datele pentru primele 100 de criptomonede (sau altă limită dorită)\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\");\n        const data = await response.json();\n        let outperformingCount = 0;\n        const totalAltcoins = data.length;\n\n        // Verifică câte altcoins au performat mai bine decât BTC în ultimele 30 de zile\n        for (let coin of data) {\n          if (coin.price_change_percentage_30d > 0) {\n            outperformingCount++;\n          }\n        }\n\n        // Dacă mai mult de 75% dintre altcoins au performat mai bine decât BTC, este altcoin season\n        const percentage = outperformingCount / totalAltcoins * 100;\n        setAltcoinsOutperformingBTC(percentage >= 75); // 75% pentru a considera că este altcoin season\n      } catch (error) {\n        console.error(\"Error fetching altcoin season data:\", error);\n        setAltcoinsOutperformingBTC(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAltcoinSeason();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 rounded-lg bg-gray-200 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: altcoinsOutperformingBTC ? \"It's Altcoin Season!\" : \"It's not Altcoin Season.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-300 h-4 rounded-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-4 rounded-full\",\n        style: {\n          width: `${altcoinsOutperformingBTC ? 100 : 0}%`,\n          backgroundColor: altcoinsOutperformingBTC ? \"#23d996\" : \"#ff4444\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-lg\",\n      children: altcoinsOutperformingBTC ? \"Over 75% of altcoins outperforming BTC\" : \"Less than 75% of altcoins outperforming BTC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"50eVlfcFB6kQaFVvESQyxU97X34=\");\n_c = AltcoinSeason;\nexport default AltcoinSeason;\nvar _c;\n$RefreshReg$(_c, \"AltcoinSeason\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AltcoinSeason","_s","altcoinsOutperformingBTC","setAltcoinsOutperformingBTC","loading","setLoading","fetchAltcoinSeason","response","fetch","data","json","outperformingCount","totalAltcoins","length","coin","price_change_percentage_30d","percentage","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","width","backgroundColor","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst AltcoinSeason = () => {\r\n  const [altcoinsOutperformingBTC, setAltcoinsOutperformingBTC] =\r\n    useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Funcția pentru a verifica dacă 75% din altcoins au performat mai bine decât BTC pe o perioadă de 30 zile\r\n    const fetchAltcoinSeason = async () => {\r\n      try {\r\n        setLoading(true);\r\n        // Fetch datele pentru primele 100 de criptomonede (sau altă limită dorită)\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        let outperformingCount = 0;\r\n        const totalAltcoins = data.length;\r\n\r\n        // Verifică câte altcoins au performat mai bine decât BTC în ultimele 30 de zile\r\n        for (let coin of data) {\r\n          if (coin.price_change_percentage_30d > 0) {\r\n            outperformingCount++;\r\n          }\r\n        }\r\n\r\n        // Dacă mai mult de 75% dintre altcoins au performat mai bine decât BTC, este altcoin season\r\n        const percentage = (outperformingCount / totalAltcoins) * 100;\r\n        setAltcoinsOutperformingBTC(percentage >= 75); // 75% pentru a considera că este altcoin season\r\n      } catch (error) {\r\n        console.error(\"Error fetching altcoin season data:\", error);\r\n        setAltcoinsOutperformingBTC(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAltcoinSeason();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 rounded-lg bg-gray-200 text-center\">\r\n      <h2 className=\"text-xl font-semibold mb-2\">\r\n        {altcoinsOutperformingBTC\r\n          ? \"It's Altcoin Season!\"\r\n          : \"It's not Altcoin Season.\"}\r\n      </h2>\r\n\r\n      <div className=\"w-full bg-gray-300 h-4 rounded-full\">\r\n        <div\r\n          className=\"h-4 rounded-full\"\r\n          style={{\r\n            width: `${altcoinsOutperformingBTC ? 100 : 0}%`,\r\n            backgroundColor: altcoinsOutperformingBTC ? \"#23d996\" : \"#ff4444\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      <p className=\"mt-2 text-lg\">\r\n        {altcoinsOutperformingBTC\r\n          ? \"Over 75% of altcoins outperforming BTC\"\r\n          : \"Less than 75% of altcoins outperforming BTC\"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,wBAAwB,EAAEC,2BAA2B,CAAC,GAC3DN,QAAQ,CAAC,IAAI,CAAC;EAChB,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFD,UAAU,CAAC,IAAI,CAAC;QAChB;QACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0GACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,IAAIC,kBAAkB,GAAG,CAAC;QAC1B,MAAMC,aAAa,GAAGH,IAAI,CAACI,MAAM;;QAEjC;QACA,KAAK,IAAIC,IAAI,IAAIL,IAAI,EAAE;UACrB,IAAIK,IAAI,CAACC,2BAA2B,GAAG,CAAC,EAAE;YACxCJ,kBAAkB,EAAE;UACtB;QACF;;QAEA;QACA,MAAMK,UAAU,GAAIL,kBAAkB,GAAGC,aAAa,GAAI,GAAG;QAC7DT,2BAA2B,CAACa,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC;MACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC3Dd,2BAA2B,CAAC,KAAK,CAAC;MACpC,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAoB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACExB,OAAA;IAAKyB,SAAS,EAAC,wCAAwC;IAAAL,QAAA,gBACrDpB,OAAA;MAAIyB,SAAS,EAAC,4BAA4B;MAAAL,QAAA,EACvCjB,wBAAwB,GACrB,sBAAsB,GACtB;IAA0B;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAELxB,OAAA;MAAKyB,SAAS,EAAC,qCAAqC;MAAAL,QAAA,eAClDpB,OAAA;QACEyB,SAAS,EAAC,kBAAkB;QAC5BC,KAAK,EAAE;UACLC,KAAK,EAAE,GAAGxB,wBAAwB,GAAG,GAAG,GAAG,CAAC,GAAG;UAC/CyB,eAAe,EAAEzB,wBAAwB,GAAG,SAAS,GAAG;QAC1D;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENxB,OAAA;MAAGyB,SAAS,EAAC,cAAc;MAAAL,QAAA,EACxBjB,wBAAwB,GACrB,wCAAwC,GACxC;IAA6C;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACtB,EAAA,CArEID,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAuEnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}