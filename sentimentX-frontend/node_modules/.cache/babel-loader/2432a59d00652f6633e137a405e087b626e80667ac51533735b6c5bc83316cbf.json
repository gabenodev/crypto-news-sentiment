{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\NightModeToggle.js\",\n  _s = $RefreshSig$();\n// src/components/NightModeToggle.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NightModeToggle = ({\n  onToggle\n}) => {\n  _s();\n  const [isNightMode, setIsNightMode] = useState(false);\n  const toggleNightMode = () => {\n    setIsNightMode(!isNightMode);\n    onToggle(!isNightMode); // Transmite schimbarea către App.js\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleNightMode,\n    className: \"fixed bottom-4 right-4 bg-blue-500 text-white p-3 rounded-full shadow-lg hover:bg-blue-700 transition duration-300\",\n    children: isNightMode ? \"Switch to Light Mode\" : \"Switch to Night Mode\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(NightModeToggle, \"GhAHa95tqOWj223NcxbBzlBXes4=\");\n_c = NightModeToggle;\nexport default NightModeToggle;\nvar _c;\n$RefreshReg$(_c, \"NightModeToggle\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NightModeToggle","onToggle","_s","isNightMode","setIsNightMode","toggleNightMode","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/NightModeToggle.js"],"sourcesContent":["// src/components/NightModeToggle.js\r\nimport React, { useState } from \"react\";\r\n\r\nconst NightModeToggle = ({ onToggle }) => {\r\n  const [isNightMode, setIsNightMode] = useState(false);\r\n\r\n  const toggleNightMode = () => {\r\n    setIsNightMode(!isNightMode);\r\n    onToggle(!isNightMode); // Transmite schimbarea către App.js\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={toggleNightMode}\r\n      className=\"fixed bottom-4 right-4 bg-blue-500 text-white p-3 rounded-full shadow-lg hover:bg-blue-700 transition duration-300\"\r\n    >\r\n      {isNightMode ? \"Switch to Light Mode\" : \"Switch to Night Mode\"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default NightModeToggle;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5BD,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5BF,QAAQ,CAAC,CAACE,WAAW,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA;IACEO,OAAO,EAAED,eAAgB;IACzBE,SAAS,EAAC,oHAAoH;IAAAC,QAAA,EAE7HL,WAAW,GAAG,sBAAsB,GAAG;EAAsB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEb,CAAC;AAACV,EAAA,CAhBIF,eAAe;AAAAa,EAAA,GAAfb,eAAe;AAkBrB,eAAeA,eAAe;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}