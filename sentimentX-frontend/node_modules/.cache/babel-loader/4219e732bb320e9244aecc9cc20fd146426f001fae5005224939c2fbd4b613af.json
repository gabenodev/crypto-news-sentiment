{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\WhaleTransactions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhaleTransactions = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [period, setPeriod] = useState(7); // 7 zile\n  const [selectedBlockchain, setSelectedBlockchain] = useState(\"ethereum\");\n  useEffect(() => {\n    // Funcția pentru a obține tranzacțiile mari\n    const fetchTransactions = async () => {\n      try {\n        // Apel API pentru a obține tranzacțiile din ultimele 7 zile\n        const response = await axios.get(`https://api.coingecko.com/api/v3/coins/${selectedBlockchain}/market_chart`, {\n          params: {\n            vs_currency: \"usd\",\n            days: period // Perioada selectată\n          }\n        });\n\n        // Presupunem că API-ul returnează tranzacțiile\n        const largeTransactions = response.data.prices.filter(transaction => {\n          const amount = transaction[1]; // Prețul este la indexul 1\n          return amount > 100000; // Filtrăm tranzacțiile mai mari de 100k USD\n        });\n        setTransactions(largeTransactions);\n      } catch (error) {\n        console.error(\"Eroare la obținerea tranzacțiilor:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTransactions();\n  }, [period, selectedBlockchain]); // Refacerea cererii când se schimbă perioada sau blockchain-ul\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading transactions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Whale Transactions (Over $100,000)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"blockchain\",\n        children: \"Select Blockchain:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"blockchain\",\n        value: selectedBlockchain,\n        onChange: e => setSelectedBlockchain(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ethereum\",\n          children: \"Ethereum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"binancecoin\",\n          children: \"Binance Coin (BSC)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"bitcoin\",\n          children: \"Bitcoin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"period\",\n        children: \"Select Period (Days):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"period\",\n        type: \"number\",\n        value: period,\n        onChange: e => setPeriod(e.target.value),\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount (USD)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Blockchain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: \"No large transactions found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(transaction[0]).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", transaction[1].toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: selectedBlockchain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(WhaleTransactions, \"NFJ2pEUC0B0C071jBiqQ7eMnR14=\");\n_c = WhaleTransactions;\nexport default WhaleTransactions;\nvar _c;\n$RefreshReg$(_c, \"WhaleTransactions\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WhaleTransactions","_s","transactions","setTransactions","loading","setLoading","period","setPeriod","selectedBlockchain","setSelectedBlockchain","fetchTransactions","response","get","params","vs_currency","days","largeTransactions","data","prices","filter","transaction","amount","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","type","min","length","colSpan","map","index","Date","toLocaleString","toFixed","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/WhaleTransactions.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst WhaleTransactions = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [period, setPeriod] = useState(7); // 7 zile\r\n  const [selectedBlockchain, setSelectedBlockchain] = useState(\"ethereum\");\r\n\r\n  useEffect(() => {\r\n    // Funcția pentru a obține tranzacțiile mari\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        // Apel API pentru a obține tranzacțiile din ultimele 7 zile\r\n        const response = await axios.get(\r\n          `https://api.coingecko.com/api/v3/coins/${selectedBlockchain}/market_chart`,\r\n          {\r\n            params: {\r\n              vs_currency: \"usd\",\r\n              days: period, // Perioada selectată\r\n            },\r\n          }\r\n        );\r\n\r\n        // Presupunem că API-ul returnează tranzacțiile\r\n        const largeTransactions = response.data.prices.filter((transaction) => {\r\n          const amount = transaction[1]; // Prețul este la indexul 1\r\n          return amount > 100000; // Filtrăm tranzacțiile mai mari de 100k USD\r\n        });\r\n\r\n        setTransactions(largeTransactions);\r\n      } catch (error) {\r\n        console.error(\"Eroare la obținerea tranzacțiilor:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTransactions();\r\n  }, [period, selectedBlockchain]); // Refacerea cererii când se schimbă perioada sau blockchain-ul\r\n\r\n  if (loading) {\r\n    return <div>Loading transactions...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Whale Transactions (Over $100,000)</h2>\r\n\r\n      {/* Selectare blockchain */}\r\n      <div>\r\n        <label htmlFor=\"blockchain\">Select Blockchain:</label>\r\n        <select\r\n          id=\"blockchain\"\r\n          value={selectedBlockchain}\r\n          onChange={(e) => setSelectedBlockchain(e.target.value)}\r\n        >\r\n          <option value=\"ethereum\">Ethereum</option>\r\n          <option value=\"binancecoin\">Binance Coin (BSC)</option>\r\n          <option value=\"bitcoin\">Bitcoin</option>\r\n          {/* Adaugă opțiuni suplimentare pentru alte blockchain-uri */}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Selectare perioadă */}\r\n      <div>\r\n        <label htmlFor=\"period\">Select Period (Days):</label>\r\n        <input\r\n          id=\"period\"\r\n          type=\"number\"\r\n          value={period}\r\n          onChange={(e) => setPeriod(e.target.value)}\r\n          min=\"1\"\r\n        />\r\n      </div>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Timestamp</th>\r\n            <th>Amount (USD)</th>\r\n            <th>Blockchain</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.length === 0 ? (\r\n            <tr>\r\n              <td colSpan=\"3\">No large transactions found.</td>\r\n            </tr>\r\n          ) : (\r\n            transactions.map((transaction, index) => (\r\n              <tr key={index}>\r\n                <td>{new Date(transaction[0]).toLocaleString()}</td>\r\n                <td>${transaction[1].toFixed(2)}</td>\r\n                <td>{selectedBlockchain}</td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WhaleTransactions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}