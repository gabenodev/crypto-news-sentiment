{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\SentimentChart.js\",\n  _s = $RefreshSig$();\n// src/components/SentimentChart.js\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { format } from \"date-fns\";\n\n// Înregistrăm componentele Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction SentimentChart() {\n  _s();\n  const [sentimentData, setSentimentData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const fetchSentimentData = async () => {\n    try {\n      const response = await axios.get(\"https://api.alternative.me/fng/?limit=365&format=json\");\n      const sentimentScores = response.data.data.map(item => parseInt(item.value));\n      const sentimentTimestamps = response.data.data.map(item => format(new Date(item.timestamp * 1000), \"MMM dd, yyyy\"));\n\n      // Inversăm datele pentru a avea cea mai recentă dată în dreapta\n      const reversedTimestamps = sentimentTimestamps.reverse();\n      const reversedScores = sentimentScores.reverse();\n      setSentimentData({\n        labels: reversedTimestamps,\n        datasets: [{\n          label: \"Sentiment Trend (Fear & Greed Index)\",\n          data: reversedScores,\n          fill: false,\n          borderColor: \"#23d996\",\n          // Culoare linie turcoaz\n          backgroundColor: \"#23d996\",\n          // Culoare linie turcoaz\n          tension: 0.1,\n          pointBackgroundColor: \"#23d996\",\n          // Culoare puncte turcoaz\n          pointBorderColor: \"#23d996\",\n          // Culoare puncte turcoaz\n          pointRadius: 3,\n          // Puncte mai mici\n          pointHoverRadius: 4,\n          // Puncte la hover\n          borderWidth: 2 // Grosimea liniei\n        }]\n      });\n    } catch (error) {\n      console.error(\"Error fetching sentiment data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchSentimentData();\n  }, []);\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: \"Date\"\n        },\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 10,\n          maxRotation: 45\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: \"Fear and Greed Index\"\n        },\n        ticks: {\n          min: 0,\n          max: 100,\n          stepSize: 10\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold text-gray-800\",\n      children: \"Market Sentiment (Fear and Greed Index)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: sentimentData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(SentimentChart, \"jqbqi7ctMXlqUCwSrfm0z4vI7sA=\");\n_c = SentimentChart;\nexport default SentimentChart;\nvar _c;\n$RefreshReg$(_c, \"SentimentChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","format","jsxDEV","_jsxDEV","register","SentimentChart","_s","sentimentData","setSentimentData","labels","datasets","fetchSentimentData","response","get","sentimentScores","data","map","item","parseInt","value","sentimentTimestamps","Date","timestamp","reversedTimestamps","reverse","reversedScores","label","fill","borderColor","backgroundColor","tension","pointBackgroundColor","pointBorderColor","pointRadius","pointHoverRadius","borderWidth","error","console","options","responsive","scales","x","title","display","text","ticks","autoSkip","maxTicksLimit","maxRotation","y","min","max","stepSize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/SentimentChart.js"],"sourcesContent":["// src/components/SentimentChart.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { format } from \"date-fns\";\r\n\r\n// Înregistrăm componentele Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction SentimentChart() {\r\n  const [sentimentData, setSentimentData] = useState({\r\n    labels: [],\r\n    datasets: [],\r\n  });\r\n\r\n  const fetchSentimentData = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://api.alternative.me/fng/?limit=365&format=json\"\r\n      );\r\n\r\n      const sentimentScores = response.data.data.map((item) =>\r\n        parseInt(item.value)\r\n      );\r\n      const sentimentTimestamps = response.data.data.map((item) =>\r\n        format(new Date(item.timestamp * 1000), \"MMM dd, yyyy\")\r\n      );\r\n\r\n      // Inversăm datele pentru a avea cea mai recentă dată în dreapta\r\n      const reversedTimestamps = sentimentTimestamps.reverse();\r\n      const reversedScores = sentimentScores.reverse();\r\n\r\n      setSentimentData({\r\n        labels: reversedTimestamps,\r\n        datasets: [\r\n          {\r\n            label: \"Sentiment Trend (Fear & Greed Index)\",\r\n            data: reversedScores,\r\n            fill: false,\r\n            borderColor: \"#23d996\", // Culoare linie turcoaz\r\n            backgroundColor: \"#23d996\", // Culoare linie turcoaz\r\n            tension: 0.1,\r\n            pointBackgroundColor: \"#23d996\", // Culoare puncte turcoaz\r\n            pointBorderColor: \"#23d996\", // Culoare puncte turcoaz\r\n            pointRadius: 3, // Puncte mai mici\r\n            pointHoverRadius: 4, // Puncte la hover\r\n            borderWidth: 2, // Grosimea liniei\r\n          },\r\n        ],\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching sentiment data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSentimentData();\r\n  }, []);\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        title: { display: true, text: \"Date\" },\r\n        ticks: { autoSkip: true, maxTicksLimit: 10, maxRotation: 45 },\r\n      },\r\n      y: {\r\n        title: { display: true, text: \"Fear and Greed Index\" },\r\n        ticks: { min: 0, max: 100, stepSize: 10 },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\r\n      <h2 className=\"text-3xl font-semibold text-gray-800\">\r\n        Market Sentiment (Fear and Greed Index)\r\n      </h2>\r\n      <div className=\"mt-6\">\r\n        <Line data={sentimentData} options={options} />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SentimentChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}