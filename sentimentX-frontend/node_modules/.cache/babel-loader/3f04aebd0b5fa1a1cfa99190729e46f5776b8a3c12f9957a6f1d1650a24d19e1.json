{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// ÃŽnregistreazÄƒ modulele pentru Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\nconst AltcoinSeason = () => {\n  _s();\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [outperformingCount, setOutperformingCount] = useState(0);\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\n\n  // ÃŽnlocuieÈ™te cu cheia ta API CoinDesk\n  const API_KEY = \"ddca38310b9d1f2707cca0ea2566f02355b4810de5835d3da5a3357c0ffb2297\";\n  useEffect(() => {\n    const fetchAltcoinSeasonData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\");\n        const data = await response.json();\n        const excludedCoins = [\"tether\", \"usd-coin\", \"wrapped-bitcoin\", \"staked-ether\", \"binance-usd\", \"dai\", \"trueusd\", \"wrapped-steth\", \"weth\", \"ethereum-classic\", \"coinbase-wrapped-btc\", \"wrapped-ethereum\", \"usds\", \"wrapped-eeth\", \"bitcoin-cash\", \"wrapped-ust\", \"susds\", \"ethena-usde\", \"first-digital-usd\", \"paypal-usd\", \"usual-usd\", \"binance-staked-sol\", \"solv-protocol-solvbtc-bbn\", \"lombard-staked-btc\", \"wrapped-avax\", \"solv-btc\"];\n        const filteredData = data.filter(coin => !excludedCoins.includes(coin.id));\n        let outperformingCountTemp = 0;\n        const totalAltcoinsTemp = filteredData.length;\n        const outperformingCoinsTemp = [];\n        const bitcoin = data.find(coin => coin.id === \"bitcoin\");\n        if (!bitcoin) {\n          console.error(\"Bitcoin data not found\");\n          return;\n        }\n        for (let coin of filteredData) {\n          if (coin.price_change_percentage_24h > bitcoin.price_change_percentage_24h) {\n            outperformingCountTemp++;\n            outperformingCoinsTemp.push({\n              name: coin.name,\n              priceChange: coin.price_change_percentage_24h,\n              image: coin.image,\n              id: coin.id // AdÄƒugÄƒm ID-ul pentru a obÈ›ine datele istorice\n            });\n          }\n        }\n\n        // SorteazÄƒ monedele Ã®n ordine descrescÄƒtoare dupÄƒ schimbarea preÈ›ului\n        outperformingCoinsTemp.sort((a, b) => b.priceChange - a.priceChange);\n        setOutperformingCount(outperformingCountTemp);\n        setTotalAltcoins(totalAltcoinsTemp);\n        setOutperformingCoins(outperformingCoinsTemp);\n        setPercentage(outperformingCountTemp / totalAltcoinsTemp * 100);\n        setIsAltcoinSeason(outperformingCountTemp / totalAltcoinsTemp * 100 >= 75);\n\n        // ObÈ›inem date istorice pentru fiecare coin (ultimele 7 zile) folosind CoinDesk\n        await fetchHistoricalDataFromCryptoCompare(outperformingCoinsTemp);\n      } catch (error) {\n        console.error(\"Error fetching altcoin season data:\", error);\n        setIsAltcoinSeason(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // FuncÈ›ia pentru a obÈ›ine datele istorice (ultimele 7 zile) folosind CoinDesk\n    const fetchHistoricalDataFromCryptoCompare = async coin => {\n      const API_KEY = \"YOUR_API_KEY\"; // Introdu cheia ta API\n      try {\n        const response = await fetch(`https://min-api.cryptocompare.com/data/v2/histoday?fsym=USD&tsym=${coin}&limit=7&api_key=${API_KEY}`);\n        const data = await response.json();\n        const prices = data.Data.Data.map(price => price.close); // Extragem preÈ›urile\n        console.log(prices);\n        // ContinuÄƒ cu prelucrarea datelor\n      } catch (error) {\n        console.error(`Error fetching historical data for ${coin}:`, error.message);\n      }\n    };\n    fetchAltcoinSeasonData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-gray-700 text-lg\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 12\n  }, this);\n  const barColor = percentage >= 80 ? \"bg-green-600\" : percentage >= 60 ? \"bg-green-400\" : percentage >= 40 ? \"bg-yellow-400\" : percentage >= 20 ? \"bg-orange-400\" : \"bg-red-500\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\",\n      children: isAltcoinSeason ? \"It's Altcoin Season! ðŸš€\" : \"It's not Altcoin Season. ðŸ“‰\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full bg-gray-300 h-4 rounded-full mb-6 overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-4 rounded-full transition-all duration-500 ${barColor}`,\n        style: {\n          width: `${percentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-700 dark:text-gray-300 text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-gray-900 dark:text-white\",\n        children: outperformingCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), \" \", \"out of\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold text-gray-900 dark:text-white\",\n        children: [\" \", totalAltcoins, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), \"altcoins have outperformed Bitcoin in the last 24 hours.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), outperformingCoins.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 dark:text-white mb-4 text-center\",\n        children: \"Coins outperforming Bitcoin:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: outperformingCoins.map((coin, index) => {\n          const sparkline = coin.sparkline || []; // Folosim sparkline dacÄƒ existÄƒ\n\n          // DacÄƒ nu existÄƒ date pentru sparkline, nu afiÈ™Äƒm graficul\n          const data = sparkline.length ? {\n            labels: sparkline.map((_, i) => i),\n            // Etichetele pentru axa X\n            datasets: [{\n              label: \"Price\",\n              data: sparkline,\n              borderColor: coin.priceChange > 0 ? \"green\" : \"red\",\n              // Culoare Ã®n funcÈ›ie de trend\n              backgroundColor: \"rgba(0, 255, 0, 0.2)\",\n              fill: true\n            }]\n          } : null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col items-center justify-between p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md hover:scale-105 transition-transform\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-3 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: coin.image,\n                alt: coin.name,\n                className: \"w-8 h-8 rounded-full\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-gray-900 dark:text-white\",\n                children: coin.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full h-24 mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: data,\n                options: {\n                  responsive: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `font-medium ${coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"}`,\n              children: [coin.priceChange > 0 ? \"+\" : \"\", coin.priceChange.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"QH53e5DDPQJyfxW8/Bv0LV02L8c=\");\n_c = AltcoinSeason;\nexport default AltcoinSeason;\nvar _c;\n$RefreshReg$(_c, \"AltcoinSeason\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","AltcoinSeason","_s","isAltcoinSeason","setIsAltcoinSeason","loading","setLoading","outperformingCount","setOutperformingCount","totalAltcoins","setTotalAltcoins","percentage","setPercentage","outperformingCoins","setOutperformingCoins","API_KEY","fetchAltcoinSeasonData","response","fetch","data","json","excludedCoins","filteredData","filter","coin","includes","id","outperformingCountTemp","totalAltcoinsTemp","length","outperformingCoinsTemp","bitcoin","find","console","error","price_change_percentage_24h","push","name","priceChange","image","sort","a","b","fetchHistoricalDataFromCryptoCompare","prices","Data","map","price","close","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","barColor","style","width","index","sparkline","labels","_","i","datasets","label","borderColor","backgroundColor","fill","src","alt","options","responsive","toFixed","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  LineElement,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// ÃŽnregistreazÄƒ modulele pentru Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  LineElement,\r\n  PointElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst AltcoinSeason = () => {\r\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [outperformingCount, setOutperformingCount] = useState(0);\r\n  const [totalAltcoins, setTotalAltcoins] = useState(0);\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\r\n\r\n  // ÃŽnlocuieÈ™te cu cheia ta API CoinDesk\r\n  const API_KEY =\r\n    \"ddca38310b9d1f2707cca0ea2566f02355b4810de5835d3da5a3357c0ffb2297\";\r\n\r\n  useEffect(() => {\r\n    const fetchAltcoinSeasonData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const excludedCoins = [\r\n          \"tether\",\r\n          \"usd-coin\",\r\n          \"wrapped-bitcoin\",\r\n          \"staked-ether\",\r\n          \"binance-usd\",\r\n          \"dai\",\r\n          \"trueusd\",\r\n          \"wrapped-steth\",\r\n          \"weth\",\r\n          \"ethereum-classic\",\r\n          \"coinbase-wrapped-btc\",\r\n          \"wrapped-ethereum\",\r\n          \"usds\",\r\n          \"wrapped-eeth\",\r\n          \"bitcoin-cash\",\r\n          \"wrapped-ust\",\r\n          \"susds\",\r\n          \"ethena-usde\",\r\n          \"first-digital-usd\",\r\n          \"paypal-usd\",\r\n          \"usual-usd\",\r\n          \"binance-staked-sol\",\r\n          \"solv-protocol-solvbtc-bbn\",\r\n          \"lombard-staked-btc\",\r\n          \"wrapped-avax\",\r\n          \"solv-btc\",\r\n        ];\r\n\r\n        const filteredData = data.filter(\r\n          (coin) => !excludedCoins.includes(coin.id)\r\n        );\r\n\r\n        let outperformingCountTemp = 0;\r\n        const totalAltcoinsTemp = filteredData.length;\r\n        const outperformingCoinsTemp = [];\r\n\r\n        const bitcoin = data.find((coin) => coin.id === \"bitcoin\");\r\n        if (!bitcoin) {\r\n          console.error(\"Bitcoin data not found\");\r\n          return;\r\n        }\r\n\r\n        for (let coin of filteredData) {\r\n          if (\r\n            coin.price_change_percentage_24h >\r\n            bitcoin.price_change_percentage_24h\r\n          ) {\r\n            outperformingCountTemp++;\r\n            outperformingCoinsTemp.push({\r\n              name: coin.name,\r\n              priceChange: coin.price_change_percentage_24h,\r\n              image: coin.image,\r\n              id: coin.id, // AdÄƒugÄƒm ID-ul pentru a obÈ›ine datele istorice\r\n            });\r\n          }\r\n        }\r\n\r\n        // SorteazÄƒ monedele Ã®n ordine descrescÄƒtoare dupÄƒ schimbarea preÈ›ului\r\n        outperformingCoinsTemp.sort((a, b) => b.priceChange - a.priceChange);\r\n\r\n        setOutperformingCount(outperformingCountTemp);\r\n        setTotalAltcoins(totalAltcoinsTemp);\r\n        setOutperformingCoins(outperformingCoinsTemp);\r\n        setPercentage((outperformingCountTemp / totalAltcoinsTemp) * 100);\r\n        setIsAltcoinSeason(\r\n          (outperformingCountTemp / totalAltcoinsTemp) * 100 >= 75\r\n        );\r\n\r\n        // ObÈ›inem date istorice pentru fiecare coin (ultimele 7 zile) folosind CoinDesk\r\n        await fetchHistoricalDataFromCryptoCompare(outperformingCoinsTemp);\r\n      } catch (error) {\r\n        console.error(\"Error fetching altcoin season data:\", error);\r\n        setIsAltcoinSeason(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // FuncÈ›ia pentru a obÈ›ine datele istorice (ultimele 7 zile) folosind CoinDesk\r\n    const fetchHistoricalDataFromCryptoCompare = async (coin) => {\r\n      const API_KEY = \"YOUR_API_KEY\"; // Introdu cheia ta API\r\n      try {\r\n        const response = await fetch(\r\n          `https://min-api.cryptocompare.com/data/v2/histoday?fsym=USD&tsym=${coin}&limit=7&api_key=${API_KEY}`\r\n        );\r\n        const data = await response.json();\r\n        const prices = data.Data.Data.map((price) => price.close); // Extragem preÈ›urile\r\n        console.log(prices);\r\n        // ContinuÄƒ cu prelucrarea datelor\r\n      } catch (error) {\r\n        console.error(\r\n          `Error fetching historical data for ${coin}:`,\r\n          error.message\r\n        );\r\n      }\r\n    };\r\n\r\n    fetchAltcoinSeasonData();\r\n  }, []);\r\n\r\n  if (loading)\r\n    return <div className=\"text-center text-gray-700 text-lg\">Loading...</div>;\r\n\r\n  const barColor =\r\n    percentage >= 80\r\n      ? \"bg-green-600\"\r\n      : percentage >= 60\r\n      ? \"bg-green-400\"\r\n      : percentage >= 40\r\n      ? \"bg-yellow-400\"\r\n      : percentage >= 20\r\n      ? \"bg-orange-400\"\r\n      : \"bg-red-500\";\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\">\r\n        {isAltcoinSeason\r\n          ? \"It's Altcoin Season! ðŸš€\"\r\n          : \"It's not Altcoin Season. ðŸ“‰\"}\r\n      </h2>\r\n      <div className=\"relative w-full bg-gray-300 h-4 rounded-full mb-6 overflow-hidden\">\r\n        <div\r\n          className={`h-4 rounded-full transition-all duration-500 ${barColor}`}\r\n          style={{ width: `${percentage}%` }}\r\n        ></div>\r\n      </div>\r\n      <p className=\"text-lg text-gray-700 dark:text-gray-300 text-center mb-4\">\r\n        <span className=\"font-semibold text-gray-900 dark:text-white\">\r\n          {outperformingCount}\r\n        </span>{\" \"}\r\n        out of\r\n        <span className=\"font-semibold text-gray-900 dark:text-white\">\r\n          {\" \"}\r\n          {totalAltcoins}{\" \"}\r\n        </span>\r\n        altcoins have outperformed Bitcoin in the last 24 hours.\r\n      </p>\r\n      {outperformingCoins.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <h3 className=\"text-xl font-semibold text-gray-800 dark:text-white mb-4 text-center\">\r\n            Coins outperforming Bitcoin:\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            {outperformingCoins.map((coin, index) => {\r\n              const sparkline = coin.sparkline || []; // Folosim sparkline dacÄƒ existÄƒ\r\n\r\n              // DacÄƒ nu existÄƒ date pentru sparkline, nu afiÈ™Äƒm graficul\r\n              const data = sparkline.length\r\n                ? {\r\n                    labels: sparkline.map((_, i) => i), // Etichetele pentru axa X\r\n                    datasets: [\r\n                      {\r\n                        label: \"Price\",\r\n                        data: sparkline,\r\n                        borderColor: coin.priceChange > 0 ? \"green\" : \"red\", // Culoare Ã®n funcÈ›ie de trend\r\n                        backgroundColor: \"rgba(0, 255, 0, 0.2)\",\r\n                        fill: true,\r\n                      },\r\n                    ],\r\n                  }\r\n                : null;\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"flex flex-col items-center justify-between p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md hover:scale-105 transition-transform\"\r\n                >\r\n                  <div className=\"flex items-center space-x-3 mb-4\">\r\n                    <img\r\n                      src={coin.image}\r\n                      alt={coin.name}\r\n                      className=\"w-8 h-8 rounded-full\"\r\n                    />\r\n                    <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                      {coin.name}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Graficul mic */}\r\n                  {data && (\r\n                    <div className=\"w-full h-24 mb-4\">\r\n                      <Line data={data} options={{ responsive: true }} />\r\n                    </div>\r\n                  )}\r\n\r\n                  <span\r\n                    className={`font-medium ${\r\n                      coin.priceChange > 0 ? \"text-green-600\" : \"text-red-500\"\r\n                    }`}\r\n                  >\r\n                    {coin.priceChange > 0 ? \"+\" : \"\"}\r\n                    {coin.priceChange.toFixed(2)}%\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}