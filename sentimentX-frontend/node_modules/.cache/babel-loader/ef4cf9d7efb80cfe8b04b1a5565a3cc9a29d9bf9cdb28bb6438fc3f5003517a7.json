{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\DayNightToggle.js\",\n  _s = $RefreshSig$();\n// src/components/DayNightToggle.js\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DayNightToggle = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Verifică setările salvate la început (dacă există)\n    const savedMode = localStorage.getItem(\"darkMode\");\n    if (savedMode) {\n      setIsDarkMode(savedMode === \"true\");\n    }\n  }, []);\n  useEffect(() => {\n    // Salvează setarea modului în localStorage\n    localStorage.setItem(\"darkMode\", isDarkMode);\n    // Aplica stilurile corespunzătoare\n    if (isDarkMode) {\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      document.documentElement.classList.remove(\"dark\");\n    }\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setIsDarkMode(!isDarkMode),\n    className: \"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white\",\n    children: isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(DayNightToggle, \"jZSDCHM8qUYa7sOOCe+CR2toAGQ=\");\n_c = DayNightToggle;\nexport default DayNightToggle;\nvar _c;\n$RefreshReg$(_c, \"DayNightToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DayNightToggle","_s","isDarkMode","setIsDarkMode","savedMode","localStorage","getItem","setItem","document","documentElement","classList","add","remove","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/DayNightToggle.js"],"sourcesContent":["// src/components/DayNightToggle.js\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst DayNightToggle = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Verifică setările salvate la început (dacă există)\r\n    const savedMode = localStorage.getItem(\"darkMode\");\r\n    if (savedMode) {\r\n      setIsDarkMode(savedMode === \"true\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Salvează setarea modului în localStorage\r\n    localStorage.setItem(\"darkMode\", isDarkMode);\r\n    // Aplica stilurile corespunzătoare\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add(\"dark\");\r\n    } else {\r\n      document.documentElement.classList.remove(\"dark\");\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <button\r\n      onClick={() => setIsDarkMode(!isDarkMode)}\r\n      className=\"p-2 rounded-md bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n    >\r\n      {isDarkMode ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DayNightToggle;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,IAAIF,SAAS,EAAE;MACbD,aAAa,CAACC,SAAS,KAAK,MAAM,CAAC;IACrC;EACF,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACd;IACAQ,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEL,UAAU,CAAC;IAC5C;IACA,IAAIA,UAAU,EAAE;MACdM,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAEhB,oBACEH,OAAA;IACEc,OAAO,EAAEA,CAAA,KAAMV,aAAa,CAAC,CAACD,UAAU,CAAE;IAC1CY,SAAS,EAAC,2EAA2E;IAAAC,QAAA,EAEpFb,UAAU,GAAG,sBAAsB,GAAG;EAAqB;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEb,CAAC;AAAClB,EAAA,CA9BID,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}