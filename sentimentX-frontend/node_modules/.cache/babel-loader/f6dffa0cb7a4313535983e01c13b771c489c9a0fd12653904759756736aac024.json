{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { LineChart, Line, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltcoinSeason = () => {\n  _s();\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\n  useEffect(() => {\n    const fetchAltcoinSeasonData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\");\n        const data = await response.json();\n        const bitcoin = data.find(coin => coin.id === \"bitcoin\");\n        if (!bitcoin) {\n          console.error(\"Bitcoin data not found\");\n          return;\n        }\n        const filteredCoins = data.filter(coin => coin.price_change_percentage_24h > bitcoin.price_change_percentage_24h);\n        setOutperformingCoins(filteredCoins);\n        setIsAltcoinSeason(filteredCoins.length / data.length * 100 >= 75);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAltcoinSeasonData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center text-gray-700 text-lg\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\",\n      children: isAltcoinSeason ? \"It's Altcoin Season! ðŸš€\" : \"It's not Altcoin Season. ðŸ“‰\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n      children: outperformingCoins.slice(0, 5).map(coin => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: coin.image,\n          alt: coin.name,\n          className: \"w-8 h-8 mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/3\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium text-gray-900 dark:text-white\",\n            children: coin.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-2/3\",\n          children: /*#__PURE__*/_jsxDEV(AltcoinChart, {\n            coinId: coin.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/3 text-right\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `font-medium ${coin.price_change_percentage_24h > 0 ? \"text-green-600\" : \"text-red-500\"}`,\n            children: [coin.price_change_percentage_24h.toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, coin.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"gkrle7qrB51MqBYggzfjKxSL5Eo=\");\n_c = AltcoinSeason;\nconst AltcoinChart = ({\n  coinId\n}) => {\n  _s2();\n  const [chartData, setChartData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchChartData = async () => {\n      try {\n        const response = await fetch(`https://api.coingecko.com/api/v3/coins/${coinId}/market_chart?vs_currency=usd&days=7&interval=daily`);\n        const data = await response.json();\n        const formattedData = data.prices.map(entry => ({\n          date: new Date(entry[0]).toLocaleDateString(),\n          price: entry[1]\n        }));\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(\"Error fetching chart data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchChartData();\n  }, [coinId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full h-24\",\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => [`$${value.toFixed(2)}`, \"Price\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: \"#23d996\",\n          strokeWidth: 2,\n          dot: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s2(AltcoinChart, \"k/gbINSN6RrWOQpLWjBNnKv+lC4=\");\n_c2 = AltcoinChart;\nexport default AltcoinSeason;\nvar _c, _c2;\n$RefreshReg$(_c, \"AltcoinSeason\");\n$RefreshReg$(_c2, \"AltcoinChart\");","map":{"version":3,"names":["React","useEffect","useState","LineChart","Line","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","AltcoinSeason","_s","isAltcoinSeason","setIsAltcoinSeason","loading","setLoading","outperformingCoins","setOutperformingCoins","fetchAltcoinSeasonData","response","fetch","data","json","bitcoin","find","coin","id","console","error","filteredCoins","filter","price_change_percentage_24h","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","src","image","alt","name","AltcoinChart","coinId","toFixed","_c","_s2","chartData","setChartData","fetchChartData","formattedData","prices","entry","date","Date","toLocaleDateString","price","width","height","formatter","value","type","dataKey","stroke","strokeWidth","dot","_c2","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { LineChart, Line, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst AltcoinSeason = () => {\r\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [outperformingCoins, setOutperformingCoins] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAltcoinSeasonData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const bitcoin = data.find((coin) => coin.id === \"bitcoin\");\r\n        if (!bitcoin) {\r\n          console.error(\"Bitcoin data not found\");\r\n          return;\r\n        }\r\n\r\n        const filteredCoins = data.filter(\r\n          (coin) =>\r\n            coin.price_change_percentage_24h >\r\n            bitcoin.price_change_percentage_24h\r\n        );\r\n\r\n        setOutperformingCoins(filteredCoins);\r\n        setIsAltcoinSeason((filteredCoins.length / data.length) * 100 >= 75);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAltcoinSeasonData();\r\n  }, []);\r\n\r\n  if (loading)\r\n    return <div className=\"text-center text-gray-700 text-lg\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto rounded-lg bg-white shadow-2xl dark:bg-gray-900 transition duration-300\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-gray-800 dark:text-white text-center\">\r\n        {isAltcoinSeason\r\n          ? \"It's Altcoin Season! ðŸš€\"\r\n          : \"It's not Altcoin Season. ðŸ“‰\"}\r\n      </h2>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n        {outperformingCoins.slice(0, 5).map((coin) => (\r\n          <div\r\n            key={coin.id}\r\n            className=\"p-4 bg-gray-100 dark:bg-gray-800 rounded-lg shadow-md flex items-center\"\r\n          >\r\n            <img src={coin.image} alt={coin.name} className=\"w-8 h-8 mr-3\" />\r\n            <div className=\"w-1/3\">\r\n              <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                {coin.name}\r\n              </span>\r\n            </div>\r\n            <div className=\"w-2/3\">\r\n              <AltcoinChart coinId={coin.id} />\r\n            </div>\r\n            <div className=\"w-1/3 text-right\">\r\n              <span\r\n                className={`font-medium ${\r\n                  coin.price_change_percentage_24h > 0\r\n                    ? \"text-green-600\"\r\n                    : \"text-red-500\"\r\n                }`}\r\n              >\r\n                {coin.price_change_percentage_24h.toFixed(2)}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AltcoinChart = ({ coinId }) => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchChartData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.coingecko.com/api/v3/coins/${coinId}/market_chart?vs_currency=usd&days=7&interval=daily`\r\n        );\r\n        const data = await response.json();\r\n        const formattedData = data.prices.map((entry) => ({\r\n          date: new Date(entry[0]).toLocaleDateString(),\r\n          price: entry[1],\r\n        }));\r\n        setChartData(formattedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching chart data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchChartData();\r\n  }, [coinId]);\r\n\r\n  if (loading) return <p>Loading chart...</p>;\r\n\r\n  return (\r\n    <div className=\"w-full h-24\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart data={chartData}>\r\n          <Tooltip formatter={(value) => [`$${value.toFixed(2)}`, \"Price\"]} />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"price\"\r\n            stroke=\"#23d996\"\r\n            strokeWidth={2}\r\n            dot={false}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}