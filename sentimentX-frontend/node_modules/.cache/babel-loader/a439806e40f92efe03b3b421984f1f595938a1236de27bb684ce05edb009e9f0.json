{"ast":null,"code":"var _jsxFileName = \"D:\\\\React App\\\\crypto-news-sentiment\\\\src\\\\components\\\\AltcoinSeason.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AltcoinSeason = () => {\n  _s();\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [ethereumPerformance, setEthereumPerformance] = useState(null);\n  const [btcDominance, setBtcDominance] = useState(null);\n  useEffect(() => {\n    const fetchAltcoinSeasonData = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch datele pentru Ethereum și Bitcoin și BTC Dominance\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin,ethereum&order=market_cap_desc&per_page=10&page=1\");\n        const data = await response.json();\n        const ethereum = data.find(coin => coin.id === \"ethereum\");\n        const bitcoin = data.find(coin => coin.id === \"bitcoin\");\n\n        // Fetch BTC Dominance (general pentru piață)\n        const dominanceResponse = await fetch(\"https://api.coingecko.com/api/v3/global\");\n        const dominanceData = await dominanceResponse.json();\n        const btcDominance = dominanceData.data.market_cap_percentage.btc;\n\n        // Performanța Ethereum și Bitcoin pe ultimele 7 zile\n        const ethereumPerformance7d = ethereum.price_change_percentage_7d;\n        const bitcoinPerformance7d = bitcoin.price_change_percentage_7d;\n        setEthereumPerformance(ethereumPerformance7d);\n        setBtcDominance(btcDominance);\n\n        // Logica pentru a determina dacă este Altcoin Season\n        // Ethereum trebuie să fi performat mai bine decât Bitcoin pe ultimele 7 zile și BTC Dominance să scadă\n        if (ethereumPerformance7d > bitcoinPerformance7d && btcDominance < 50) {\n          setIsAltcoinSeason(true);\n        } else {\n          setIsAltcoinSeason(false);\n        }\n      } catch (error) {\n        console.error(\"Error fetching altcoin season data:\", error);\n        setIsAltcoinSeason(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAltcoinSeasonData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 rounded-lg bg-gray-200 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: isAltcoinSeason ? \"It's Altcoin Season (Ethereum is outperforming Bitcoin and BTC Dominance is decreasing)\" : \"It's not Altcoin Season.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-300 h-4 rounded-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-4 rounded-full\",\n        style: {\n          width: `${isAltcoinSeason ? 100 : 0}%`,\n          // Dacă este Altcoin Season, bara este completă\n          backgroundColor: isAltcoinSeason ? \"#23d996\" : \"#ff4444\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-lg\",\n      children: isAltcoinSeason ? `Ethereum has outperformed Bitcoin by ${ethereumPerformance}% over the last 7 days, and BTC Dominance is at ${btcDominance}%` : `Ethereum has not outperformed Bitcoin or BTC Dominance is still high. Ethereum Performance: ${ethereumPerformance}%, BTC Dominance: ${btcDominance}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AltcoinSeason, \"1JW0Wpfczo+579LIiQuclayHJG8=\");\n_c = AltcoinSeason;\nexport default AltcoinSeason;\nvar _c;\n$RefreshReg$(_c, \"AltcoinSeason\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AltcoinSeason","_s","isAltcoinSeason","setIsAltcoinSeason","loading","setLoading","ethereumPerformance","setEthereumPerformance","btcDominance","setBtcDominance","fetchAltcoinSeasonData","response","fetch","data","json","ethereum","find","coin","id","bitcoin","dominanceResponse","dominanceData","market_cap_percentage","btc","ethereumPerformance7d","price_change_percentage_7d","bitcoinPerformance7d","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","width","backgroundColor","_c","$RefreshReg$"],"sources":["D:/React App/crypto-news-sentiment/src/components/AltcoinSeason.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst AltcoinSeason = () => {\r\n  const [isAltcoinSeason, setIsAltcoinSeason] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [ethereumPerformance, setEthereumPerformance] = useState(null);\r\n  const [btcDominance, setBtcDominance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAltcoinSeasonData = async () => {\r\n      try {\r\n        setLoading(true);\r\n\r\n        // Fetch datele pentru Ethereum și Bitcoin și BTC Dominance\r\n        const response = await fetch(\r\n          \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin,ethereum&order=market_cap_desc&per_page=10&page=1\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const ethereum = data.find((coin) => coin.id === \"ethereum\");\r\n        const bitcoin = data.find((coin) => coin.id === \"bitcoin\");\r\n\r\n        // Fetch BTC Dominance (general pentru piață)\r\n        const dominanceResponse = await fetch(\r\n          \"https://api.coingecko.com/api/v3/global\"\r\n        );\r\n        const dominanceData = await dominanceResponse.json();\r\n        const btcDominance = dominanceData.data.market_cap_percentage.btc;\r\n\r\n        // Performanța Ethereum și Bitcoin pe ultimele 7 zile\r\n        const ethereumPerformance7d = ethereum.price_change_percentage_7d;\r\n        const bitcoinPerformance7d = bitcoin.price_change_percentage_7d;\r\n\r\n        setEthereumPerformance(ethereumPerformance7d);\r\n        setBtcDominance(btcDominance);\r\n\r\n        // Logica pentru a determina dacă este Altcoin Season\r\n        // Ethereum trebuie să fi performat mai bine decât Bitcoin pe ultimele 7 zile și BTC Dominance să scadă\r\n        if (ethereumPerformance7d > bitcoinPerformance7d && btcDominance < 50) {\r\n          setIsAltcoinSeason(true);\r\n        } else {\r\n          setIsAltcoinSeason(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching altcoin season data:\", error);\r\n        setIsAltcoinSeason(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAltcoinSeasonData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 rounded-lg bg-gray-200 text-center\">\r\n      <h2 className=\"text-xl font-semibold mb-2\">\r\n        {isAltcoinSeason\r\n          ? \"It's Altcoin Season (Ethereum is outperforming Bitcoin and BTC Dominance is decreasing)\"\r\n          : \"It's not Altcoin Season.\"}\r\n      </h2>\r\n\r\n      <div className=\"w-full bg-gray-300 h-4 rounded-full\">\r\n        <div\r\n          className=\"h-4 rounded-full\"\r\n          style={{\r\n            width: `${isAltcoinSeason ? 100 : 0}%`, // Dacă este Altcoin Season, bara este completă\r\n            backgroundColor: isAltcoinSeason ? \"#23d996\" : \"#ff4444\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      <p className=\"mt-2 text-lg\">\r\n        {isAltcoinSeason\r\n          ? `Ethereum has outperformed Bitcoin by ${ethereumPerformance}% over the last 7 days, and BTC Dominance is at ${btcDominance}%`\r\n          : `Ethereum has not outperformed Bitcoin or BTC Dominance is still high. Ethereum Performance: ${ethereumPerformance}%, BTC Dominance: ${btcDominance}%`}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AltcoinSeason;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}